{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-toastify\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./auth.service\";\nimport * as i6 from \"@angular/common\";\nfunction CounterComponent_div_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Full Name is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_9_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Full Name should be at most 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"input\", 20);\n    i0.ɵɵelementStart(2, \"label\", 21);\n    i0.ɵɵtext(3, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_9_div_4_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(5, CounterComponent_div_9_div_5_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r0.infoForm.get(\"fname\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r0.infoForm.get(\"fname\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.infoForm.get(\"fname\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength) && ((tmp_1_0 = ctx_r0.infoForm.get(\"fname\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction CounterComponent_div_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" lname is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" lname should be at most 10 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"input\", 24);\n    i0.ɵɵelementStart(2, \"label\", 25);\n    i0.ɵɵtext(3, \"lname\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_10_div_4_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(5, CounterComponent_div_10_div_5_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r1.infoForm.get(\"lname\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r1.infoForm.get(\"lname\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.infoForm.get(\"lname\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength) && ((tmp_1_0 = ctx_r1.infoForm.get(\"lname\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction CounterComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_11_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" password should contain at least one uppercase letter and one digit. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" password should be at most 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"input\", 26);\n    i0.ɵɵelementStart(2, \"label\", 27);\n    i0.ɵɵtext(3, \"password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_11_div_4_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(5, CounterComponent_div_11_div_5_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(6, CounterComponent_div_11_div_6_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r2.infoForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r2.infoForm.get(\"password\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.infoForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.pattern) && ((tmp_1_0 = ctx_r2.infoForm.get(\"password\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.infoForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength) && ((tmp_2_0 = ctx_r2.infoForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction CounterComponent_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" lname is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_12_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" lname should be at most 10 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"input\", 24);\n    i0.ɵɵelementStart(2, \"label\", 25);\n    i0.ɵɵtext(3, \"lname\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_12_div_4_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(5, CounterComponent_div_12_div_5_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r3.loginForm.get(\"lname\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r3.loginForm.get(\"lname\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r3.loginForm.get(\"lname\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength) && ((tmp_1_0 = ctx_r3.loginForm.get(\"lname\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction CounterComponent_div_13_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" password should contain at least one uppercase letter and one digit. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" password should be at most 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"input\", 26);\n    i0.ɵɵelementStart(2, \"label\", 27);\n    i0.ɵɵtext(3, \"password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_13_div_4_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(5, CounterComponent_div_13_div_5_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(6, CounterComponent_div_13_div_6_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r4.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r4.loginForm.get(\"password\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.loginForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.pattern) && ((tmp_1_0 = ctx_r4.loginForm.get(\"password\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r4.loginForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength) && ((tmp_2_0 = ctx_r4.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n  }\n}\nconst _c0 = function () {\n  return [\"/fetch-data\"];\n};\nexport class CounterComponent {\n  constructor(http, formBuilder, toaster, route, router, authService) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.toaster = toaster;\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.datas = [];\n    this.isRegistration = true;\n  }\n  navigateToHomePage(ID) {\n    const numericID = +ID;\n    const url = `/home/${numericID}`;\n    this.router.navigateByUrl(url);\n  }\n  showSuccessToaster() {\n    this.toaster.success('Registered!');\n  }\n  showSuccessToasterl() {\n    this.toaster.info('Valid!');\n  }\n  showErrorToaster() {\n    this.toaster.error('Validation error!!!');\n  }\n  showErrorToastern() {\n    this.toaster.error('Wrong Username or Password !!!');\n  }\n  showErrorToasterli() {\n    this.toaster.success('User Logged in!');\n  }\n  navigateToAccountsPage() {\n    this.router.navigate(['/fetch-data']);\n    this.showErrorToasterli();\n  }\n  showErrorToasterla() {\n    this.toaster.success('Admin Logged in!');\n  }\n  ngOnInit() {\n    this.http.get(`${this.APIUrl}/info`).subscribe({\n      next: value => {\n        console.log(value);\n        ;\n      },\n      error: err => {\n        console.log(err);\n        console.log('yyacvaaaa!');\n      }\n    });\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      fname: ['', [Validators.required, Validators.maxLength(15)]],\n      lname: ['', [Validators.required, Validators.maxLength(10)]],\n      password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]],\n      roleID: [0]\n    });\n    this.loginForm = this.formBuilder.group({\n      lname: ['', [Validators.required, Validators.maxLength(10)]],\n      password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.fname);\n  }\n  onSubmit() {\n    if (this.isRegistration) {\n      if (this.infoForm.valid) {\n        this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n          next: () => {\n            console.log(`Posted: ${this.infoForm.value}`);\n            this.showSuccessToaster();\n            this.ngOnInit();\n          },\n          error: err => {\n            console.log(`Posted: ${this.infoForm.value.lname}`);\n            console.log(err);\n            console.log('error here!');\n          }\n        });\n      } else this.showErrorToaster();\n    } else {\n      if (this.loginForm.valid) {\n        this.http.post(`${this.APIUrl}/login`, this.loginForm.value).subscribe({\n          next: response => {\n            if (response.token) {\n              // Store the token in local storage\n              localStorage.setItem('token', response.token);\n              localStorage.setItem('id', response.id);\n              localStorage.setItem('lname', response.lname);\n              localStorage.setItem('roleID', response.roleID);\n              console.log(response);\n              if (response.roleID == 1) {\n                this.showErrorToasterla();\n              } else this.showErrorToasterli();\n              // Display a success message\n            } else {\n              this.showErrorToastern(); // No matching user found (null response)\n            }\n          },\n\n          error: err => {\n            console.log(err);\n            this.showErrorToastern(); // Handle the error\n          }\n        });\n      } else {\n        this.showErrorToaster(); // Invalid form\n      }\n    }\n  }\n\n  toggleForm() {\n    this.isRegistration = !this.isRegistration;\n    this.infoForm.reset();\n    this.loginForm.reset();\n  }\n  toggleChatbot() {\n    const chatbotIframe = document.getElementById(\"chatbot-iframe\");\n    const currentDisplay = chatbotIframe.style.display || getComputedStyle(chatbotIframe).display;\n    chatbotIframe.style.display = currentDisplay === \"none\" || currentDisplay === \"\" ? \"block\" : \"none\";\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.AuthService));\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 28,\n  vars: 11,\n  consts: [[1, \"bg-image\"], [\"novalidate\", \"\", 1, \"d-flex\", \"justify-content-between\", \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"newModal\", \"tabindex\", \"-1\"], [1, \"bg-info\"], [1, \"mt-5\", \"pt-5\", \"d-flex\", \"bg-info-subtle\", \"position-relative\", \"d-flex\", \"justify-content-center\", \"bg-light\", \"border\", \"rounded-4\", \"border-1\", \"border-primary-subtle\", \"flex-column\", 2, \"width\", \"600px\", \"height\", \"450px\"], [1, \"d-flex\", \"justify-content-around\"], [1, \"m-3\", \"d-flex\", \"justify-content-center\"], [1, \"col-md-6\"], [\"class\", \"form-floating mb-3\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-info\", \"w-80\", \"m-2\", \"me-5\", \"border-1\", \"rounded\", \"text-dark\", \"shadow\", \"bg-body-tertiary\", 2, \"width\", \"200px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-info\", \"w-100\", \"m-2\", \"mx-5\", \"border-1\", \"rounded\", \"text-dark\", \"shadow\", \"bg-body-tertiary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-transparent\", \"m-2\", \"mx-5\", \"w-100\", \"p-1\", \"text-dark\", \"m-2\", 3, \"routerLink\"], [\"src\", \"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-captured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-line-design-style-vector.jpg\", \"alt\", \"...\", 1, \"mt-5\", \"img-thumbnail\", \"border-0\", 2, \"width\", \"600px\", \"height\", \"440px\", \"--bs-img-opacity\", \".5\"], [\"id\", \"chatbot-iframe\"], [\"src\", \"https://www.chatbase.co/chatbot-iframe/o2gqZeOI8xSUmlrA8kdfr\", \"width\", \"300\", \"height\", \"400\", \"frameborder\", \"0\", \"allowfullscreen\", \"\", 1, \"position-absolute\", \"bottom-0\", \"end-0\", \"m-5\"], [\"id\", \"chatbot-button\"], [1, \"btn\", \"rounded-circle\", \"position-absolute\", \"bottom-0\", \"end-0\", \"m-4\", 3, \"click\"], [\"src\", \"https://dep.num.edu.mn/econ/wp-content/themes/numdepart/images/logo.png\", \"alt\", \"Chatbot Image\", \"width\", \"50\", \"height\", \"50\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"text\", \"id\", \"FName\", \"formControlName\", \"fname\", \"placeholder\", \"Full Name\", 1, \"form-control\"], [\"for\", \"FName\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"type\", \"text\", \"id\", \"lname\", \"formControlName\", \"lname\", \"placeholder\", \"lname\", 1, \"form-control\"], [\"for\", \"lname\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", 1, \"form-control\"], [\"for\", \"password\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CounterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7);\n      i0.ɵɵtemplate(9, CounterComponent_div_9_Template, 6, 2, \"div\", 8);\n      i0.ɵɵtemplate(10, CounterComponent_div_10_Template, 6, 2, \"div\", 8);\n      i0.ɵɵtemplate(11, CounterComponent_div_11_Template, 7, 3, \"div\", 8);\n      i0.ɵɵtemplate(12, CounterComponent_div_12_Template, 6, 2, \"div\", 8);\n      i0.ɵɵtemplate(13, CounterComponent_div_13_Template, 7, 3, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_17_listener() {\n        return ctx.toggleForm();\n      });\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 12);\n      i0.ɵɵtext(20, \"All accounts ->\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(21, \"img\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 14);\n      i0.ɵɵelement(23, \"iframe\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 16)(25, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_25_listener() {\n        return ctx.toggleChatbot();\n      });\n      i0.ɵɵelement(26, \"img\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(27, \"lib-toastify-toast-container\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.isRegistration ? ctx.infoForm : ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"Registration\" : \"Login\", \" section \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRegistration);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"Register\" : \"Login\", \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"or Login\" : \"or Register\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n    }\n  },\n  dependencies: [i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.ToastifyToastContainerComponent, i4.RouterLink],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('fadeInOut', [state('void', style({\n      opacity: 0\n    })), transition('* <=> *', [animate('300ms ease-in-out')])])]\n  }\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SACEC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,OAAO,QACF,qBAAqB;;;;;;;;;;ICMIC,+BACsF;IAClFA,wCACJ;IAAAA,iBAAM;;;;;IACNA,+BACuF;IACnFA,iEACJ;IAAAA,iBAAM;;;;;IAXVA,+BAAwD;IACpDA,4BAC4B;IAC5BA,iCAAmB;IAAAA,yBAAS;IAAAA,iBAAQ;IACpCA,wEAGM;IACNA,wEAGM;IACVA,iBAAM;;;;;;IAPGA,eAA+E;IAA/EA,yNAA+E;IAI/EA,eAAgF;IAAhFA,0NAAgF;;;;;IAQrFA,+BACsF;IAClFA,oCACJ;IAAAA,iBAAM;;;;;IACNA,+BACuF;IACnFA,6DACJ;IAAAA,iBAAM;;;;;IAXVA,+BAAuD;IACnDA,4BACwB;IACxBA,iCAAmB;IAAAA,qBAAK;IAAAA,iBAAQ;IAChCA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;IAPGA,eAA+E;IAA/EA,yNAA+E;IAI/EA,eAAgF;IAAhFA,0NAAgF;;;;;IAQrFA,+BAC4F;IACxFA,uCACJ;IAAAA,iBAAM;;;;;IACNA,+BAC2F;IACvFA,sFACJ;IAAAA,iBAAM;;;;;IACNA,+BAC6F;IACzFA,gEACJ;IAAAA,iBAAM;;;;;IAfVA,+BAAuD;IACnDA,4BAC2B;IAC3BA,iCAAsB;IAAAA,wBAAQ;IAAAA,iBAAQ;IACtCA,yEAGM;IACNA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;;IAXGA,eAAqF;IAArFA,+NAAqF;IAIrFA,eAAoF;IAApFA,8NAAoF;IAIpFA,eAAsF;IAAtFA,gOAAsF;;;;;IAQ3FA,+BACwF;IACpFA,oCACJ;IAAAA,iBAAM;;;;;IACNA,+BACyF;IACrFA,6DACJ;IAAAA,iBAAM;;;;;IAXVA,+BAAwD;IACpDA,4BACwB;IACxBA,iCAAmB;IAAAA,qBAAK;IAAAA,iBAAQ;IAChCA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;IAPGA,eAAiF;IAAjFA,2NAAiF;IAIjFA,eAAkF;IAAlFA,4NAAkF;;;;;IAQvFA,+BAC8F;IAC1FA,uCACJ;IAAAA,iBAAM;;;;;IACNA,+BAC6F;IACzFA,sFACJ;IAAAA,iBAAM;;;;;IACNA,+BAC+F;IAC3FA,gEACJ;IAAAA,iBAAM;;;;;IAfVA,+BAAuD;IACnDA,4BAC2B;IAC3BA,iCAAsB;IAAAA,wBAAQ;IAAAA,iBAAQ;IACtCA,yEAGM;IACNA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;;IAXGA,eAAuF;IAAvFA,iOAAuF;IAIvFA,eAAsF;IAAtFA,gOAAsF;IAItFA,eAAwF;IAAxFA,kOAAwF;;;;;;ADzD7H,OAAM,MAAOC,gBAAgB;EAC3BC,YACUC,IAAgB,EAChBC,WAAwB,EACxBC,OAAqB,EACrBC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IALxB,SAAI,GAAJL,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,YAAO,GAAPC,OAAO;IACP,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAGZ,WAAM,GAAG,wCAAwC;IAOnD,UAAK,GAAY,EAAE;IACnB,UAAK,GAAW,EAAE;IAGlB,mBAAc,GAAY,IAAI;EAblC;EAGHC,kBAAkB,CAACC,EAAU;IAC3B,MAAMC,SAAS,GAAG,CAACD,EAAE;IACrB,MAAME,GAAG,GAAG,SAASD,SAAS,EAAE;IAChC,IAAI,CAACJ,MAAM,CAACM,aAAa,CAACD,GAAG,CAAC;EAChC;EAOAE,kBAAkB;IAChB,IAAI,CAACT,OAAO,CAACU,OAAO,CAAC,aAAa,CAAC;EACrC;EACAC,mBAAmB;IACjB,IAAI,CAACX,OAAO,CAACY,IAAI,CAAC,QAAQ,CAAC;EAC7B;EACAC,gBAAgB;IACd,IAAI,CAACb,OAAO,CAACc,KAAK,CAAC,qBAAqB,CAAC;EAC3C;EACAC,iBAAiB;IACf,IAAI,CAACf,OAAO,CAACc,KAAK,CAAC,gCAAgC,CAAC;EACtD;EACAE,kBAAkB;IAChB,IAAI,CAAChB,OAAO,CAACU,OAAO,CAAC,iBAAiB,CAAC;EACzC;EACAO,sBAAsB;IACpB,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACrC,IAAI,CAACF,kBAAkB,EAAE;EAC3B;EACAG,kBAAkB;IAChB,IAAI,CAACnB,OAAO,CAACU,OAAO,CAAC,kBAAkB,CAAC;EAC1C;EAEAU,QAAQ;IACN,IAAI,CAACtB,IAAI,CAACuB,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,OAAO,CAAC,CAC5CC,SAAS,CAAC;MACTC,IAAI,EAAGC,KAAK,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAAC;MACrB,CAAC;MACDX,KAAK,EAAGc,GAAG,IAAI;QACbF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;QAChBF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3B;KACD,CACA;IACD,IAAI,CAACE,QAAQ,GAAG,IAAI,CAAC9B,WAAW,CAAC+B,KAAK,CAAC;MACrCzB,EAAE,EAAE,CAAC,CAAC,CAAC;MACP0B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC1C,UAAU,CAAC2C,QAAQ,EAAE3C,UAAU,CAAC4C,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC7C,UAAU,CAAC2C,QAAQ,EAAE3C,UAAU,CAAC4C,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DE,QAAQ,EAAE,CACR,EAAE,EACF,CACE9C,UAAU,CAAC2C,QAAQ,EACnB3C,UAAU,CAAC4C,SAAS,CAAC,EAAE,CAAC,EACxB5C,UAAU,CAAC+C,OAAO,CAAC,uCAAuC,CAAC,CAC5D,CACF;MACDC,MAAM,EAAE,CAAC,CAAC;KACX,CAAC;IAEF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACvC,WAAW,CAAC+B,KAAK,CAAC;MACtCI,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC7C,UAAU,CAAC2C,QAAQ,EAAE3C,UAAU,CAAC4C,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DE,QAAQ,EAAE,CACR,EAAE,EACF,CACE9C,UAAU,CAAC2C,QAAQ,EACnB3C,UAAU,CAAC4C,SAAS,CAAC,EAAE,CAAC,EACxB5C,UAAU,CAAC+C,OAAO,CAAC,uCAAuC,CAAC,CAC5D;KAEJ,CAAC;EACJ;EAEAG,aAAa;IACXb,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG,IAAI,CAACE,QAAQ,CAACJ,KAAK,CAACM,KAAK,CAAC;EACtD;EAEAS,QAAQ;IACN,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,IAAI,CAACZ,QAAQ,CAACa,KAAK,EAAE;QACvB,IAAI,CAAC5C,IAAI,CAAC6C,IAAI,CAAC,GAAG,IAAI,CAACrB,MAAM,EAAE,EAAE,IAAI,CAACO,QAAQ,CAACJ,KAAK,CAAC,CAACF,SAAS,CAAC;UAC9DC,IAAI,EAAE,MAAK;YACTE,OAAO,CAACC,GAAG,CAAC,WAAW,IAAI,CAACE,QAAQ,CAACJ,KAAK,EAAE,CAAC;YAC7C,IAAI,CAAChB,kBAAkB,EAAE;YACzB,IAAI,CAACW,QAAQ,EAAE;UACjB,CAAC;UACDN,KAAK,EAAGc,GAAG,IAAI;YACbF,OAAO,CAACC,GAAG,CAAC,WAAW,IAAI,CAACE,QAAQ,CAACJ,KAAK,CAACS,KAAK,EAAE,CAAC;YACnDR,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;YAChBF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC5B;SACD,CAAC;OACH,MAAM,IAAI,CAACd,gBAAgB,EAAE;KAC/B,MAAM;MACL,IAAI,IAAI,CAACyB,SAAS,CAACI,KAAK,EAAE;QACxB,IAAI,CAAC5C,IAAI,CAAC6C,IAAI,CAAC,GAAG,IAAI,CAACrB,MAAM,QAAQ,EAAE,IAAI,CAACgB,SAAS,CAACb,KAAK,CAAC,CAACF,SAAS,CAAC;UACrEC,IAAI,EAAGoB,QAAa,IAAI;YACtB,IAAIA,QAAQ,CAACC,KAAK,EAAE;cAClB;cACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACC,KAAK,CAAC;cAC7CC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEH,QAAQ,CAACI,EAAE,CAAC;cACvCF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACV,KAAK,CAAC;cAC7CY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEH,QAAQ,CAACP,MAAM,CAAC;cAC/CX,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;cACrB,IAAGA,QAAQ,CAACP,MAAM,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAClB,kBAAkB,EAAE;eAC1B,MACI,IAAI,CAACH,kBAAkB,EAAE;cAC9B;aACD,MAAM;cACL,IAAI,CAACD,iBAAiB,EAAE,CAAC,CAAC;;UAE9B,CAAC;;UACDD,KAAK,EAAGc,GAAG,IAAI;YACbF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;YAChB,IAAI,CAACb,iBAAiB,EAAE,CAAC,CAAC;UAC5B;SACD,CAAC;OACH,MAAM;QACL,IAAI,CAACF,gBAAgB,EAAE,CAAC,CAAC;;;EAG/B;;EAEAoC,UAAU;IACR,IAAI,CAACR,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACZ,QAAQ,CAACqB,KAAK,EAAE;IACrB,IAAI,CAACZ,SAAS,CAACY,KAAK,EAAE;EACxB;EACAC,aAAa;IACX,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAgB;IAE9E,MAAMC,cAAc,GAAGH,aAAa,CAAC5D,KAAK,CAACgE,OAAO,IAAIC,gBAAgB,CAACL,aAAa,CAAC,CAACI,OAAO;IAE7FJ,aAAa,CAAC5D,KAAK,CAACgE,OAAO,GAAID,cAAc,KAAK,MAAM,IAAIA,cAAc,KAAK,EAAE,GAAI,OAAO,GAAG,MAAM;EACvG;;AAnJW3D,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA8D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCxB7BnE,8BAAsB;MAEdA;QAAA,OAAYoE,cAAU;MAAA,EAAC;MACvBpE,8BAAiC;MAMbA,YACJ;MAAAA,iBAAK;MACLA,8BAAsB;MAClBA,iEAYM;MACNA,mEAYM;MACNA,mEAgBM;MACNA,mEAYM;MACNA,mEAgBM;MACVA,iBAAM;MAEVA,+BAA0B;MAGlBA,aACJ;MAAAA,iBAAS;MACTA,mCACmG;MAD7EA;QAAA,OAASoE,gBAAY;MAAA,EAAC;MAExCpE,aACJ;MAAAA,iBAAS;MAETA,mCACiE;MAAAA,gCAAe;MAAAA,iBAAS;MAMzGA,2BAC6G;MACjHA,iBAAO;MAGXA,gCAAyB;MACrBA,8BAOU;MACdA,iBAAM;MACNA,gCAAyB;MACmDA;QAAA,OAASoE,mBAAe;MAAA,EAAC;MAC7FpE,2BAA8H;MAClIA,iBAAS;MAEbA,gDAA6D;;;MA3HKA,eAAmD;MAAnDA,6EAAmD;MAQzFA,eACJ;MADIA,sFACJ;MAEsCA,eAAoB;MAApBA,yCAAoB;MAarBA,eAAoB;MAApBA,yCAAoB;MAapBA,eAAoB;MAApBA,yCAAoB;MAiBpBA,eAAqB;MAArBA,0CAAqB;MAatBA,eAAqB;MAArBA,0CAAqB;MAsBrDA,eACJ;MADIA,0EACJ;MAGIA,eACJ;MADIA,gFACJ;MAEsBA,eAA8B;MAA9BA,wDAA8B;;;;;;eDhF9D,CACVL,OAAO,CAAC,WAAW,EAAE,CACnBC,KAAK,CAAC,MAAM,EAAEC,KAAK,CAAC;MAAEwE,OAAO,EAAE;IAAC,CAAE,CAAC,CAAC,EACpCvE,UAAU,CAAC,SAAS,EAAE,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CACtD,CAAC;EACH;AAAA","names":["Validators","trigger","state","style","transition","animate","i0","CounterComponent","constructor","http","formBuilder","toaster","route","router","authService","navigateToHomePage","ID","numericID","url","navigateByUrl","showSuccessToaster","success","showSuccessToasterl","info","showErrorToaster","error","showErrorToastern","showErrorToasterli","navigateToAccountsPage","navigate","showErrorToasterla","ngOnInit","get","APIUrl","subscribe","next","value","console","log","err","infoForm","group","fname","required","maxLength","lname","password","pattern","roleID","loginForm","openpostModal","onSubmit","isRegistration","valid","post","response","token","localStorage","setItem","id","toggleForm","reset","toggleChatbot","chatbotIframe","document","getElementById","currentDisplay","display","getComputedStyle","selectors","decls","vars","consts","template","ctx","opacity"],"sourceRoot":"","sources":["D:\\New folder\\Snatched\\ClientApp\\src\\app\\counter\\counter.component.ts","D:\\New folder\\Snatched\\ClientApp\\src\\app\\counter\\counter.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\nimport { ToastService } from 'angular-toastify';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Token } from '@angular/compiler';\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html',\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      state('void', style({ opacity: 0 })),\r\n      transition('* <=> *', [animate('300ms ease-in-out')]),\r\n    ]),\r\n  ],\r\n})\r\nexport class CounterComponent implements OnInit {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private formBuilder: FormBuilder,\r\n    private toaster: ToastService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n  navigateToHomePage(ID: number) {\r\n    const numericID = +ID;\r\n    const url = `/home/${numericID}`;\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  public items: items[] = [];\r\n  public datas: data[] = [];\r\n  public infoForm!: FormGroup;\r\n  public loginForm!: FormGroup;\r\n  public isRegistration: boolean = true;\r\n  showSuccessToaster() {\r\n    this.toaster.success('Registered!');\r\n  }\r\n  showSuccessToasterl() {\r\n    this.toaster.info('Valid!');\r\n  }\r\n  showErrorToaster() {\r\n    this.toaster.error('Validation error!!!');\r\n  }\r\n  showErrorToastern() {\r\n    this.toaster.error('Wrong Username or Password !!!');\r\n  }\r\n  showErrorToasterli() {\r\n    this.toaster.success('User Logged in!');\r\n  }\r\n  navigateToAccountsPage() {\r\n    this.router.navigate(['/fetch-data']);\r\n    this.showErrorToasterli();\r\n  }\r\n  showErrorToasterla() {\r\n    this.toaster.success('Admin Logged in!');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.http.get<items[]>(`${this.APIUrl}/info`)\r\n    .subscribe({\r\n      next: (value) => {\r\n        console.log(value);;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n        console.log('yyacvaaaa!');\r\n      },\r\n    }\r\n    );\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      fname: ['', [Validators.required, Validators.maxLength(15)]],\r\n      lname: ['', [Validators.required, Validators.maxLength(10)]],\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\r\n        ],\r\n      ],\r\n      roleID: [0],\r\n    });\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      lname: ['', [Validators.required, Validators.maxLength(10)]],\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.fname);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.isRegistration) {\r\n      if (this.infoForm.valid) {\r\n        this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n          next: () => {\r\n            console.log(`Posted: ${this.infoForm.value}`);\r\n            this.showSuccessToaster();\r\n            this.ngOnInit();\r\n          },\r\n          error: (err) => {\r\n            console.log(`Posted: ${this.infoForm.value.lname}`);\r\n            console.log(err);\r\n            console.log('error here!');\r\n          },\r\n        });\r\n      } else this.showErrorToaster();\r\n    } else {\r\n      if (this.loginForm.valid) {\r\n        this.http.post(`${this.APIUrl}/login`, this.loginForm.value).subscribe({\r\n          next: (response: any) => {\r\n            if (response.token) {\r\n              // Store the token in local storage\r\n              localStorage.setItem('token', response.token);\r\n              localStorage.setItem('id', response.id);\r\n              localStorage.setItem('lname', response.lname);\r\n              localStorage.setItem('roleID', response.roleID);\r\n              console.log(response);\r\n              if(response.roleID == 1) {\r\n                this.showErrorToasterla();\r\n              }\r\n              else this.showErrorToasterli();\r\n              // Display a success message\r\n            } else {\r\n              this.showErrorToastern(); // No matching user found (null response)\r\n            }\r\n          },\r\n          error: (err) => {\r\n            console.log(err);\r\n            this.showErrorToastern(); // Handle the error\r\n          },\r\n        });\r\n      } else {\r\n        this.showErrorToaster(); // Invalid form\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleForm() {\r\n    this.isRegistration = !this.isRegistration;\r\n    this.infoForm.reset();\r\n    this.loginForm.reset();\r\n  }\r\n  toggleChatbot(): void {\r\n    const chatbotIframe = document.getElementById(\"chatbot-iframe\") as HTMLElement;\r\n\r\n    const currentDisplay = chatbotIframe.style.display || getComputedStyle(chatbotIframe).display;\r\n\r\n    chatbotIframe.style.display = (currentDisplay === \"none\" || currentDisplay === \"\") ? \"block\" : \"none\";\r\n  }\r\n\r\n}\r\n\r\ninterface data {\r\n  id: number;\r\n  lname: string;\r\n  password: string;\r\n}\r\n\r\ninterface items {\r\n  id: number;\r\n  fname: string;\r\n  lname: string;\r\n  password: string;\r\n  roleid: number;\r\n}\r\n","<div class=\"bg-image\">\r\n    <form class=\"d-flex justify-content-between needs-validation\" [formGroup]=\"isRegistration ? infoForm : loginForm\"\r\n        (ngSubmit)=\"onSubmit()\" novalidate>\r\n        <div id=\"newModal\" tabindex=\"-1\">\r\n            <div class=\"bg-info\">\r\n                <div style=\"width: 600px; height: 450px;\"\r\n                    class=\"mt-5 pt-5 d-flex bg-info-subtle position-relative d-flex justify-content-center bg-light border rounded-4 border-1 border-primary-subtle flex-column\">\r\n                    <div class=\"d-flex justify-content-around\">\r\n                        <h4 class=\"m-3 d-flex justify-content-center\">\r\n                            {{ isRegistration ? 'Registration' : 'Login' }} section\r\n                        </h4>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-floating mb-3\"  *ngIf=\"isRegistration\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"FName\" formControlName=\"fname\"\r\n                                    placeholder=\"Full Name\">\r\n                                <label for=\"FName\">Full Name</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('fname')?.errors?.required && infoForm.get('fname')?.touched\">\r\n                                    Full Name is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('fname')?.errors?.maxlength && infoForm.get('fname')?.touched\">\r\n                                    Full Name should be at most 15 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\" *ngIf=\"isRegistration\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"lname\" formControlName=\"lname\"\r\n                                    placeholder=\"lname\">\r\n                                <label for=\"lname\">lname</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('lname')?.errors?.required && infoForm.get('lname')?.touched\">\r\n                                    lname is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('lname')?.errors?.maxlength && infoForm.get('lname')?.touched\">\r\n                                    lname should be at most 10 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\" *ngIf=\"isRegistration\">\r\n                                <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"\r\n                                    placeholder=\"password\">\r\n                                <label for=\"password\">password</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('password')?.errors?.required && infoForm.get('password')?.touched\">\r\n                                    password is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('password')?.errors?.pattern && infoForm.get('password')?.touched\">\r\n                                    password should contain at least one uppercase letter and one digit.\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('password')?.errors?.maxlength && infoForm.get('password')?.touched\">\r\n                                    password should be at most 15 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\" *ngIf=\"!isRegistration\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"lname\" formControlName=\"lname\"\r\n                                    placeholder=\"lname\">\r\n                                <label for=\"lname\">lname</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('lname')?.errors?.required && loginForm.get('lname')?.touched\">\r\n                                    lname is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('lname')?.errors?.maxlength && loginForm.get('lname')?.touched\">\r\n                                    lname should be at most 10 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\"*ngIf=\"!isRegistration\">\r\n                                <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"\r\n                                    placeholder=\"password\">\r\n                                <label for=\"password\">password</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('password')?.errors?.required && loginForm.get('password')?.touched\">\r\n                                    password is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('password')?.errors?.pattern && loginForm.get('password')?.touched\">\r\n                                    password should contain at least one uppercase letter and one digit.\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('password')?.errors?.maxlength && loginForm.get('password')?.touched\">\r\n                                    password should be at most 15 characters long.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"submit\" style=\"width: 200px;\"\r\n                            class=\"btn btn-outline-info w-80 m-2 me-5 border-1 rounded text-dark shadow bg-body-tertiary\">\r\n                            {{ isRegistration ? 'Register' : 'Login' }}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"toggleForm()\"\r\n                            class=\"btn btn-outline-info w-100 m-2 mx-5 border-1 rounded text-dark shadow bg-body-tertiary\">\r\n                            {{ isRegistration ? 'or Login' : 'or Register' }}\r\n                        </button>\r\n                        \r\n                        <button type=\"button\" [routerLink]=\"['/fetch-data']\"\r\n                            class=\"btn btn-transparent m-2 mx-5 w-100 p-1 text-dark m-2\">All accounts -></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <img src=\"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-captured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-line-design-style-vector.jpg\"\r\n            style=\"width: 600px; height: 440px; --bs-img-opacity: .5;\" class=\"mt-5 img-thumbnail border-0\" alt=\"...\">\r\n    </form>\r\n</div>\r\n\r\n<div id=\"chatbot-iframe\">\r\n    <iframe\r\n    class=\"position-absolute bottom-0 end-0 m-5\"\r\n        src=\"https://www.chatbase.co/chatbot-iframe/o2gqZeOI8xSUmlrA8kdfr\"\r\n        width=\"300\"\r\n        height=\"400\"\r\n        frameborder=\"0\"\r\n        allowfullscreen\r\n    ></iframe>\r\n</div>\r\n<div id=\"chatbot-button\">\r\n    <button class=\"btn rounded-circle position-absolute bottom-0 end-0 m-4\" (click)=\"toggleChatbot()\">\r\n        <img src=\"https://dep.num.edu.mn/econ/wp-content/themes/numdepart/images/logo.png\" alt=\"Chatbot Image\" width=\"50\" height=\"50\">\r\n    </button>\r\n</div>\r\n<lib-toastify-toast-container></lib-toastify-toast-container>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}