{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FetchDataComponent = class FetchDataComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.getItems();\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n    this.accForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.maxLength(15)]],\n      Username: ['', [Validators.maxLength(10)]],\n      Password: ['', [Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  getItems() {\n    this.http.get(this.APIUrl).subscribe({\n      next: value => {\n        this.items = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  openEditModal(item) {\n    this.accForm.patchValue(item);\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.FName);\n  }\n  Posting() {\n    if (this.infoForm.valid) {\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n        next: () => {\n          console.log(`Posted: ${this.infoForm.value.Username}`);\n          this.getItems();\n          this.closeNewModal(); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  updating() {\n    if (this.accForm.valid) {\n      this.http.put(`${this.APIUrl}`, this.accForm.value).subscribe({\n        next: () => {\n          console.log(`Updated by ID: ${this.accForm.value.ID}`);\n          this.getItems();\n          this.closeEditModal(); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  closeEditModal() {\n    const modal = document.getElementById('exampleModal');\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      document.body.classList.remove('modal-open');\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      if (modalBackdrop) {\n        modalBackdrop.remove();\n      }\n    }\n  }\n  closeNewModal() {\n    const modal = document.getElementById('newModal');\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      document.body.classList.remove('modal-open');\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      if (modalBackdrop) {\n        modalBackdrop.remove();\n      }\n    }\n  }\n  deleteInfo(ID) {\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\n      next: () => {\n        console.log(`Deleted by ID: ${ID}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n};\nFetchDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n})], FetchDataComponent);\nexport { FetchDataComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","FetchDataComponent","constructor","http","formBuilder","getItems","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","accForm","get","APIUrl","subscribe","next","value","items","error","err","console","log","openEditModal","item","patchValue","openpostModal","Posting","valid","post","closeNewModal","updating","put","closeEditModal","modal","document","getElementById","classList","remove","style","display","body","modalBackdrop","querySelector","deleteInfo","delete","selector","templateUrl"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n  public accForm!: FormGroup;\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: ['', [Validators.required, Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n    this.accForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.maxLength(15)]],\r\n      Username: ['', [Validators.maxLength(10)]],\r\n      Password: ['', [Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.http.get<items[]>(this.APIUrl).subscribe({\r\n      next: (value) => {\r\n        this.items = value;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  openEditModal(item: items) {\r\n    this.accForm.patchValue(item);\r\n  }\r\n\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.FName);\r\n  }\r\n\r\n  Posting() {\r\n    if (this.infoForm.valid) {\r\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Posted: ${this.infoForm.value.Username}`);\r\n          this.getItems();\r\n          this.closeNewModal(); // Close the modal\r\n        },\r\n        error: (err) => { \r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  updating() {\r\n    if (this.accForm.valid) {\r\n      this.http.put(`${this.APIUrl}`, this.accForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Updated by ID: ${this.accForm.value.ID}`);\r\n          this.getItems();\r\n          this.closeEditModal(); // Close the modal\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEditModal() {\r\n    const modal = document.getElementById('exampleModal');\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      document.body.classList.remove('modal-open');\r\n      const modalBackdrop = document.querySelector('.modal-backdrop');\r\n      if (modalBackdrop) {\r\n        modalBackdrop.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeNewModal() {\r\n    const modal = document.getElementById('newModal');\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      document.body.classList.remove('modal-open');\r\n      const modalBackdrop = document.querySelector('.modal-backdrop');\r\n      if (modalBackdrop) {\r\n        modalBackdrop.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  deleteInfo(ID: number) {\r\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\r\n      next: () => {\r\n        console.log(`Deleted by ID: ${ID}`);\r\n        this.getItems()\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}