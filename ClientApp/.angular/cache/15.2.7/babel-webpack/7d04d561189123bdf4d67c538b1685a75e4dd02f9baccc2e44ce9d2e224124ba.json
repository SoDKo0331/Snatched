{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"angular-toastify\";\nimport * as i3 from \"@angular/router\";\nexport class HomeComponent {\n  constructor(http, toaster, route) {\n    this.toaster = toaster;\n    this.route = route;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = []; // Corrected variable name\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const ID = +params['id']; // Convert the parameter to a number\n      console.log('ID from route:', ID);\n      // Now you can use the ID in your home component as needed\n    });\n  }\n\n  toggleChatbot() {\n    var chatbotIframe = document.getElementById(\"chatbot-iframe\");\n    var currentDisplay = chatbotIframe.style.display || getComputedStyle(chatbotIframe).display;\n    chatbotIframe.style.display = currentDisplay === \"none\" || currentDisplay === \"\" ? \"block\" : \"none\";\n  }\n  showErrorToasterli() {\n    this.toaster.success('User Logged in!');\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ToastService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 17,\n  vars: 0,\n  consts: [[1, \"mb-5\", \"pb-5\"], [1, \"d-flex\", \"justify-content-center\"], [\"src\", \"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-\\ncaptured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-\\nline-design-style-vector.jpg\", \"alt\", \"...\", 1, \"mx-5\", \"position-absolute\", \"img-thumbnail\", \"border-0\", 2, \"width\", \"900px\", \"height\", \"550px\", \"--bs-img-opacity\", \".5\"], [\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1, shrink-to-fit=no\"], [\"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\", \"rel\", \"stylesheet\"], [\"id\", \"chatbot-button\"], [\"onclick\", \"toggleChatbot()\", 1, \"btn\", \"btn-primary\"], [\"id\", \"chatbot-iframe\"], [\"src\", \"https://www.chatbase.co/chatbot-iframe/o2gqZeOI8xSUmlrA8kdfr\", \"width\", \"300\", \"height\", \"400\", \"frameborder\", \"0\", \"allowfullscreen\", \"\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Team 6\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelement(3, \"img\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"html\", 3)(5, \"head\");\n      i0.ɵɵelement(6, \"meta\", 4)(7, \"meta\", 5);\n      i0.ɵɵelementStart(8, \"title\");\n      i0.ɵɵtext(9, \"Your ASP.NET Core Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"link\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"body\")(12, \"div\", 7)(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Toggle Chatbot\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵelement(16, \"iframe\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\"#chatbot-button[_ngcontent-%COMP%] {\\n            position: fixed;\\n            bottom: 20px;\\n            right: 20px;\\n            z-index: 1000; \\n        }\\n\\n        #chatbot-iframe[_ngcontent-%COMP%] {\\n            display: none;\\n        }\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,aAAa;EACxBC,YAAYC,IAAgB,EAAUC,OAAqB,EAAUC,KAAqB;IAApD,YAAO,GAAPD,OAAO;IAAwB,UAAK,GAALC,KAAK;IAEjE,WAAM,GAAG,wCAAwC;IAgBnD,UAAK,GAAY,EAAE,CAAC,CAAC;EAjB5B;;EAGAC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,MAAME,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;MAC1BG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,EAAE,CAAC;MAEjC;IACF,CAAC,CAAC;EACJ;;EACAG,aAAa;IACX,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAC7D,IAAIC,cAAc,GAAGH,aAAa,CAACI,KAAK,CAACC,OAAO,IAAIC,gBAAgB,CAACN,aAAa,CAAC,CAACK,OAAO;IAE3FL,aAAa,CAACI,KAAK,CAACC,OAAO,GAAIF,cAAc,KAAK,MAAM,IAAIA,cAAc,KAAK,EAAE,GAAI,OAAO,GAAG,MAAM;EACvG;EAEOI,kBAAkB;IAAK,IAAI,CAAChB,OAAO,CAACiB,OAAO,CAAC,iBAAiB,CAAC;EAAC;;AApB3DpB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1BC,6BAAuB;MAAAA,sBAAM;MAAAA,iBAAK;MAClCA,8BAA2C;MACvCA,yBAEsJ;MAC1JA,iBAAM;MAENA,+BAAgB;MAEZA,0BAAsB;MAEtBA,6BAAO;MAAAA,6CAA6B;MAAAA,iBAAQ;MAE5CA,2BAAoG;MAexGA,iBAAO;MACPA,6BAAM;MAK4DA,+BAAc;MAAAA,iBAAS;MAIrFA,+BAAyB;MACrBA,8BAMU;MACdA,iBAAM","names":["HomeComponent","constructor","http","toaster","route","ngOnInit","params","subscribe","ID","console","log","toggleChatbot","chatbotIframe","document","getElementById","currentDisplay","style","display","getComputedStyle","showErrorToasterli","success","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\home\\home.component.ts","D:\\aka\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ToastService } from 'angular-toastify';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit{\r\n  constructor(http: HttpClient,  public toaster: ToastService, private route: ActivatedRoute) { \r\n  }\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      const ID = +params['id']; // Convert the parameter to a number\r\n      console.log('ID from route:', ID);\r\n  \r\n      // Now you can use the ID in your home component as needed\r\n    });\r\n  }\r\n  toggleChatbot() {\r\n    var chatbotIframe = document.getElementById(\"chatbot-iframe\");\r\n    var currentDisplay = chatbotIframe.style.display || getComputedStyle(chatbotIframe).display;\r\n\r\n    chatbotIframe.style.display = (currentDisplay === \"none\" || currentDisplay === \"\") ? \"block\" : \"none\";\r\n  }\r\n  public items: items[] = []; // Corrected variable name\r\n  public showErrorToasterli() { this.toaster.success('User Logged in!');}\r\n}\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}","<h1 class=\"mb-5 pb-5\" >Team 6</h1>\r\n<div class=\"d-flex justify-content-center\">\r\n    <img src=\"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-\r\ncaptured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-\r\nline-design-style-vector.jpg\" style=\"width: 900px; height: 550px; --bs-img-opacity: .5;\" class=\"mx-5 position-absolute img-thumbnail border-0 \" alt=\"...\">\r\n</div>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <title>Your ASP.NET Core Application</title>\r\n    <!-- Add Bootstrap CSS -->\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <!-- Your custom styles if needed -->\r\n    <style>\r\n        /* Add your custom styles here */\r\n        #chatbot-button {\r\n            position: fixed;\r\n            bottom: 20px;\r\n            right: 20px;\r\n            z-index: 1000; /* Adjust the z-index as needed */\r\n        }\r\n\r\n        #chatbot-iframe {\r\n            display: none;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <!-- Your ASP.NET Core content goes here -->\r\n\r\n    <!-- Chatbot Button -->\r\n    <div id=\"chatbot-button\">\r\n        <button class=\"btn btn-primary\" onclick=\"toggleChatbot()\">Toggle Chatbot</button>\r\n    </div>\r\n\r\n    <!-- Chatbot Iframe -->\r\n    <div id=\"chatbot-iframe\">\r\n        <iframe\r\n            src=\"https://www.chatbase.co/chatbot-iframe/o2gqZeOI8xSUmlrA8kdfr\"\r\n            width=\"300\"\r\n            height=\"400\"\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n        ></iframe>\r\n    </div>\r\n\r\n    <!-- Add Bootstrap JS and Popper.js -->\r\n    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js\"></script>\r\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n\r\n    <script>\r\n        function toggleChatbot() {\r\n            var chatbotIframe = document.getElementById(\"chatbot-iframe\");\r\n            var currentDisplay = chatbotIframe.style.display || getComputedStyle(chatbotIframe).display;\r\n    \r\n            chatbotIframe.style.display = (currentDisplay === \"none\" || currentDisplay === \"\") ? \"block\" : \"none\";\r\n        }\r\n    </script>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}