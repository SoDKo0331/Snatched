{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-toastify\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nfunction CounterComponent_div_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Full Name is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_9_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Full Name should be at most 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"input\", 15);\n    i0.ɵɵelementStart(2, \"label\", 16);\n    i0.ɵɵtext(3, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_9_div_4_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(5, CounterComponent_div_9_div_5_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r0.infoForm.get(\"FName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r0.infoForm.get(\"FName\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.infoForm.get(\"FName\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength) && ((tmp_1_0 = ctx_r0.infoForm.get(\"FName\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction CounterComponent_div_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Username should be at most 10 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"input\", 19);\n    i0.ɵɵelementStart(2, \"label\", 20);\n    i0.ɵɵtext(3, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_10_div_4_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(5, CounterComponent_div_10_div_5_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r1.infoForm.get(\"Username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r1.infoForm.get(\"Username\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.infoForm.get(\"Username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength) && ((tmp_1_0 = ctx_r1.infoForm.get(\"Username\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction CounterComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_11_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password should contain at least one uppercase letter and one digit. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password should be at most 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"input\", 21);\n    i0.ɵɵelementStart(2, \"label\", 22);\n    i0.ɵɵtext(3, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_11_div_4_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(5, CounterComponent_div_11_div_5_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(6, CounterComponent_div_11_div_6_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r2.infoForm.get(\"Password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r2.infoForm.get(\"Password\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.infoForm.get(\"Password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.pattern) && ((tmp_1_0 = ctx_r2.infoForm.get(\"Password\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.infoForm.get(\"Password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength) && ((tmp_2_0 = ctx_r2.infoForm.get(\"Password\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction CounterComponent_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_12_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Username should be at most 10 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"input\", 19);\n    i0.ɵɵelementStart(2, \"label\", 20);\n    i0.ɵɵtext(3, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_12_div_4_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(5, CounterComponent_div_12_div_5_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r3.loginForm.get(\"Username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r3.loginForm.get(\"Username\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r3.loginForm.get(\"Username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength) && ((tmp_1_0 = ctx_r3.loginForm.get(\"Username\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction CounterComponent_div_13_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password should contain at least one uppercase letter and one digit. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password should be at most 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"input\", 21);\n    i0.ɵɵelementStart(2, \"label\", 22);\n    i0.ɵɵtext(3, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CounterComponent_div_13_div_4_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(5, CounterComponent_div_13_div_5_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(6, CounterComponent_div_13_div_6_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r4.loginForm.get(\"Password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required) && ((tmp_0_0 = ctx_r4.loginForm.get(\"Password\")) == null ? null : tmp_0_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.loginForm.get(\"Password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.pattern) && ((tmp_1_0 = ctx_r4.loginForm.get(\"Password\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r4.loginForm.get(\"Password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength) && ((tmp_2_0 = ctx_r4.loginForm.get(\"Password\")) == null ? null : tmp_2_0.touched));\n  }\n}\nconst _c0 = function () {\n  return [\"/fetch-data\"];\n};\nexport class CounterComponent {\n  constructor(http, formBuilder, toaster) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.toaster = toaster;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.datas = [];\n    this.isRegistration = true;\n  }\n  showSuccessToaster() {\n    this.toaster.info('Registered!');\n  }\n  showSuccessToasterl() {\n    this.toaster.info('Valid!');\n  }\n  showErrorToaster() {\n    this.toaster.info('Validation error!!!');\n  }\n  showErrorToastern() {\n    this.toaster.info('Wrong Username or Password !!!');\n  }\n  showErrorToasterli() {\n    this.toaster.info('User Logged in!');\n  }\n  showErrorToasterla() {\n    this.toaster.info('Admin Logged in!');\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n    this.loginForm = this.formBuilder.group({\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.FName);\n  }\n  onSubmit() {\n    if (this.isRegistration) {\n      if (this.infoForm.valid) {\n        this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n          next: () => {\n            console.log(`Posted: ${this.infoForm.value.Username}`);\n            this.showSuccessToaster();\n            this.ngOnInit(); // Close the modal\n          },\n\n          error: err => {\n            console.log(err);\n            console.log('error here!');\n          }\n        });\n      } else this.showErrorToaster();\n    } else {\n      if (this.loginForm.valid) {\n        try {\n          this.http.get(`${this.APIUrl}`, {\n            params: {\n              Username: this.loginForm.value\n            } // Passing parameters properly\n          }).subscribe({\n            next: value => {\n              this.datas = value;\n              if (this.datas.length > 0) {\n                const retrievedUsername = this.datas[0].Username;\n                const retrievedPassword = this.datas[0].Password;\n                if (this.loginForm.value.Username === retrievedUsername && this.loginForm.value.Password === retrievedPassword) {\n                  if (this.loginForm.value.ID === 1) {\n                    // Log the retrieved Username\n                    console.log('Retrieved Username:', retrievedPassword);\n                    this.showErrorToasterla();\n                  }\n                } else {\n                  this.showErrorToastern();\n                }\n              } else {\n                this.showErrorToastern(); // No matching user found\n              }\n            },\n\n            error: err => {\n              console.log(err);\n              console.log('Error fetching login data');\n              this.showErrorToaster(); // Handle the error gracefully\n            }\n          });\n        } catch (error) {\n          console.log(error);\n          this.showErrorToaster(); // Handle the error gracefully\n        }\n      } else {\n        this.showErrorToaster(); // Invalid form\n      }\n    }\n  }\n\n  toggleForm() {\n    this.isRegistration = !this.isRegistration;\n    this.infoForm.reset();\n    this.loginForm.reset();\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastService));\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 23,\n  vars: 11,\n  consts: [[1, \"bg-image\"], [\"novalidate\", \"\", 1, \"d-flex\", \"justify-content-between\", \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"newModal\", \"tabindex\", \"-1\"], [1, \"bg-info\"], [1, \"mt-5\", \"pt-5\", \"d-flex\", \"bg-info-subtle\", \"position-relative\", \"d-flex\", \"justify-content-center\", \"bg-light\", \"border\", \"rounded-4\", \"border-1\", \"border-primary-subtle\", \"flex-column\", 2, \"width\", \"600px\", \"height\", \"450px\"], [1, \"d-flex\", \"justify-content-around\"], [1, \"m-3\", \"d-flex\", \"justify-content-center\"], [1, \"col-md-6\"], [\"class\", \"form-floating mb-3\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-info\", \"w-80\", \"m-2\", \"me-5\", \"border-1\", \"rounded\", \"text-dark\", \"shadow\", \"bg-body-tertiary\", 2, \"width\", \"200px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-info\", \"w-100\", \"m-2\", \"mx-5\", \"border-1\", \"rounded\", \"text-dark\", \"shadow\", \"bg-body-tertiary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-transparent\", \"m-2\", \"mx-5\", \"w-100\", \"p-1\", \"text-dark\", \"m-2\", 3, \"routerLink\"], [\"src\", \"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-captured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-line-design-style-vector.jpg\", \"alt\", \"...\", 1, \"mt-5\", \"img-thumbnail\", \"border-0\", 2, \"width\", \"600px\", \"height\", \"440px\", \"--bs-img-opacity\", \".5\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"text\", \"id\", \"FName\", \"formControlName\", \"FName\", \"placeholder\", \"Full Name\", 1, \"form-control\"], [\"for\", \"FName\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"type\", \"text\", \"id\", \"Username\", \"formControlName\", \"Username\", \"placeholder\", \"Username\", 1, \"form-control\"], [\"for\", \"Username\"], [\"type\", \"password\", \"id\", \"Password\", \"formControlName\", \"Password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"for\", \"Password\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CounterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7);\n      i0.ɵɵtemplate(9, CounterComponent_div_9_Template, 6, 2, \"div\", 8);\n      i0.ɵɵtemplate(10, CounterComponent_div_10_Template, 6, 2, \"div\", 8);\n      i0.ɵɵtemplate(11, CounterComponent_div_11_Template, 7, 3, \"div\", 8);\n      i0.ɵɵtemplate(12, CounterComponent_div_12_Template, 6, 2, \"div\", 8);\n      i0.ɵɵtemplate(13, CounterComponent_div_13_Template, 7, 3, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_17_listener() {\n        return ctx.toggleForm();\n      });\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 12);\n      i0.ɵɵtext(20, \"All accounts ->\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(21, \"img\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"lib-toastify-toast-container\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.isRegistration ? ctx.infoForm : ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"Registration\" : \"Login\", \" section \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRegistration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRegistration);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"Register\" : \"Login\", \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"or Login\" : \"or Register\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.ToastifyToastContainerComponent, i5.RouterLink],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('fadeInOut', [state('void', style({\n      opacity: 0\n    })), transition('* <=> *', [animate('300ms ease-in-out')])])]\n  }\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAASC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,QAAQ,qBAAqB;;;;;;;;;ICahDC,+BACsF;IAClFA,wCACJ;IAAAA,iBAAM;;;;;IACNA,+BACuF;IACnFA,iEACJ;IAAAA,iBAAM;;;;;IAXVA,+BAAwD;IACpDA,4BAC4B;IAC5BA,iCAAmB;IAAAA,yBAAS;IAAAA,iBAAQ;IACpCA,wEAGM;IACNA,wEAGM;IACVA,iBAAM;;;;;;IAPGA,eAA+E;IAA/EA,yNAA+E;IAI/EA,eAAgF;IAAhFA,0NAAgF;;;;;IAQrFA,+BAC4F;IACxFA,uCACJ;IAAAA,iBAAM;;;;;IACNA,+BAC6F;IACzFA,gEACJ;IAAAA,iBAAM;;;;;IAXVA,+BAAuD;IACnDA,4BAC2B;IAC3BA,iCAAsB;IAAAA,wBAAQ;IAAAA,iBAAQ;IACtCA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;IAPGA,eAAqF;IAArFA,+NAAqF;IAIrFA,eAAsF;IAAtFA,gOAAsF;;;;;IAQ3FA,+BAC4F;IACxFA,uCACJ;IAAAA,iBAAM;;;;;IACNA,+BAC2F;IACvFA,sFACJ;IAAAA,iBAAM;;;;;IACNA,+BAC6F;IACzFA,gEACJ;IAAAA,iBAAM;;;;;IAfVA,+BAAuD;IACnDA,4BAC2B;IAC3BA,iCAAsB;IAAAA,wBAAQ;IAAAA,iBAAQ;IACtCA,yEAGM;IACNA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;;IAXGA,eAAqF;IAArFA,+NAAqF;IAIrFA,eAAoF;IAApFA,8NAAoF;IAIpFA,eAAsF;IAAtFA,gOAAsF;;;;;IAQ3FA,+BAC8F;IAC1FA,uCACJ;IAAAA,iBAAM;;;;;IACNA,+BAC+F;IAC3FA,gEACJ;IAAAA,iBAAM;;;;;IAXVA,+BAAwD;IACpDA,4BAC2B;IAC3BA,iCAAsB;IAAAA,wBAAQ;IAAAA,iBAAQ;IACtCA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;IAPGA,eAAuF;IAAvFA,iOAAuF;IAIvFA,eAAwF;IAAxFA,kOAAwF;;;;;IAQ7FA,+BAC8F;IAC1FA,uCACJ;IAAAA,iBAAM;;;;;IACNA,+BAC6F;IACzFA,sFACJ;IAAAA,iBAAM;;;;;IACNA,+BAC+F;IAC3FA,gEACJ;IAAAA,iBAAM;;;;;IAfVA,+BAAuD;IACnDA,4BAC2B;IAC3BA,iCAAsB;IAAAA,wBAAQ;IAAAA,iBAAQ;IACtCA,yEAGM;IACNA,yEAGM;IACNA,yEAGM;IACVA,iBAAM;;;;;;;IAXGA,eAAuF;IAAvFA,iOAAuF;IAIvFA,eAAsF;IAAtFA,gOAAsF;IAItFA,eAAwF;IAAxFA,kOAAwF;;;;;;AD/D7H,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,IAAgB,EAAUC,WAAwB,EAAUC,OAAqB;IAAjF,SAAI,GAAJF,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAAuB,YAAO,GAAPC,OAAO;IAE9E,WAAM,GAAG,wCAAwC;IAEnD,UAAK,GAAY,EAAE;IACnB,UAAK,GAAW,EAAE;IAGlB,mBAAc,GAAY,IAAI;EARoE;EASzGC,kBAAkB;IAAK,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,aAAa,CAAC;EAAE;EACzDC,mBAAmB;IAAK,IAAI,CAACH,OAAO,CAACE,IAAI,CAAC,QAAQ,CAAC;EAAE;EACrDE,gBAAgB;IAAK,IAAI,CAACJ,OAAO,CAACE,IAAI,CAAC,qBAAqB,CAAC;EAAE;EAC/DG,iBAAiB;IAAK,IAAI,CAACL,OAAO,CAACE,IAAI,CAAC,gCAAgC,CAAC;EAAE;EAC3EI,kBAAkB;IAAK,IAAI,CAACN,OAAO,CAACE,IAAI,CAAC,iBAAiB,CAAC;EAAE;EAC7DK,kBAAkB;IAAK,IAAI,CAACP,OAAO,CAACE,IAAI,CAAC,kBAAkB,CAAC;EAAE;EAE9DM,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACV,WAAW,CAACW,KAAK,CAAC;MACrCC,EAAE,EAAE,CAAC,CAAC,CAAC;MACPC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACvB,UAAU,CAACwB,QAAQ,EAAExB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC1B,UAAU,CAACwB,QAAQ,EAAExB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/DE,QAAQ,EAAE,CACR,EAAE,EACF,CACE3B,UAAU,CAACwB,QAAQ,EACnBxB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,EACxBzB,UAAU,CAAC4B,OAAO,CAAC,uCAAuC,CAAC,CAC5D;KAEJ,CAAC;IAEF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACnB,WAAW,CAACW,KAAK,CAAC;MACtCK,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC1B,UAAU,CAACwB,QAAQ,EAAExB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/DE,QAAQ,EAAE,CACR,EAAE,EACF,CACE3B,UAAU,CAACwB,QAAQ,EACnBxB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,EACxBzB,UAAU,CAAC4B,OAAO,CAAC,uCAAuC,CAAC,CAC5D;KAEJ,CAAC;EACJ;EAEAE,aAAa;IACXC,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG,IAAI,CAACZ,QAAQ,CAACa,KAAK,CAACV,KAAK,CAAC;EACtD;EAEAW,QAAQ;IACN,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,IAAI,CAACf,QAAQ,CAACgB,KAAK,EAAE;QACvB,IAAI,CAAC3B,IAAI,CAAC4B,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,EAAE,EAAE,IAAI,CAAClB,QAAQ,CAACa,KAAK,CAAC,CAACM,SAAS,CAAC;UAC9DC,IAAI,EAAE,MAAK;YACTT,OAAO,CAACC,GAAG,CAAC,WAAW,IAAI,CAACZ,QAAQ,CAACa,KAAK,CAACP,QAAQ,EAAE,CAAC;YACtD,IAAI,CAACd,kBAAkB,EAAE;YACzB,IAAI,CAACO,QAAQ,EAAE,CAAC,CAAC;UACnB,CAAC;;UACDsB,KAAK,EAAGC,GAAG,IAAI;YACbX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;YAChBX,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC5B;SACD,CAAC;OACH,MACI,IAAI,CAACjB,gBAAgB,EAAE;KAC7B,MAAM;MACL,IAAI,IAAI,CAACc,SAAS,CAACO,KAAK,EAAE;QACxB,IAAI;UACF,IAAI,CAAC3B,IAAI,CAACkC,GAAG,CAAS,GAAG,IAAI,CAACL,MAAM,EAAE,EAAE;YACtCM,MAAM,EAAE;cAAElB,QAAQ,EAAE,IAAI,CAACG,SAAS,CAACI;YAAK,CAAE,CAAC;WAC5C,CAAC,CAACM,SAAS,CAAC;YACXC,IAAI,EAAGP,KAAK,IAAI;cACd,IAAI,CAACY,KAAK,GAAGZ,KAAK;cAElB,IAAI,IAAI,CAACY,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;gBACzB,MAAMC,iBAAiB,GAAG,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC,CAACnB,QAAQ;gBAChD,MAAMsB,iBAAiB,GAAG,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,CAAClB,QAAQ;gBAEhD,IACE,IAAI,CAACE,SAAS,CAACI,KAAK,CAACP,QAAQ,KAAKqB,iBAAiB,IACnD,IAAI,CAAClB,SAAS,CAACI,KAAK,CAACN,QAAQ,KAAKqB,iBAAiB,EACnD;kBACA,IAAI,IAAI,CAACnB,SAAS,CAACI,KAAK,CAACX,EAAE,KAAK,CAAC,EAAE;oBACjC;oBACAS,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEgB,iBAAiB,CAAC;oBACrD,IAAI,CAAC9B,kBAAkB,EAAE;;iBAG5B,MAAM;kBACL,IAAI,CAACF,iBAAiB,EAAE;;eAE3B,MAAM;gBACL,IAAI,CAACA,iBAAiB,EAAE,CAAC,CAAC;;YAE9B,CAAC;;YACDyB,KAAK,EAAGC,GAAG,IAAI;cACbX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;cAChBX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;cACxC,IAAI,CAACjB,gBAAgB,EAAE,CAAC,CAAC;YAC3B;WACD,CAAC;SACH,CAAC,OAAO0B,KAAK,EAAE;UACdV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;UAClB,IAAI,CAAC1B,gBAAgB,EAAE,CAAC,CAAC;;OAE5B,MAAM;QACL,IAAI,CAACA,gBAAgB,EAAE,CAAC,CAAC;;;EAI/B;;EAEAkC,UAAU;IACR,IAAI,CAACd,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACf,QAAQ,CAAC8B,KAAK,EAAE;IACrB,IAAI,CAACrB,SAAS,CAACqB,KAAK,EAAE;EACxB;;AApHW3C,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA4C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClB7BjD,8BAAsB;MAEdA;QAAA,OAAYkD,cAAU;MAAA,EAAC;MACvBlD,8BAAiC;MAMbA,YACJ;MAAAA,iBAAK;MACLA,8BAAsB;MAClBA,iEAYM;MACNA,mEAYM;MACNA,mEAgBM;MACNA,mEAYM;MACNA,mEAgBM;MACVA,iBAAM;MAEVA,+BAA0B;MAGlBA,aACJ;MAAAA,iBAAS;MACTA,mCACmG;MAD7EA;QAAA,OAASkD,gBAAY;MAAA,EAAC;MAExClD,aACJ;MAAAA,iBAAS;MAETA,mCACiE;MAAAA,gCAAe;MAAAA,iBAAS;MAKzGA,2BAC6G;MACjHA,iBAAO;MAEXA,gDAA6D;;;MA1GKA,eAAmD;MAAnDA,6EAAmD;MAQzFA,eACJ;MADIA,sFACJ;MAEsCA,eAAoB;MAApBA,yCAAoB;MAarBA,eAAoB;MAApBA,yCAAoB;MAapBA,eAAoB;MAApBA,yCAAoB;MAiBpBA,eAAqB;MAArBA,0CAAqB;MAatBA,eAAqB;MAArBA,0CAAqB;MAsBrDA,eACJ;MADIA,0EACJ;MAGIA,eACJ;MADIA,gFACJ;MAEsBA,eAA8B;MAA9BA,wDAA8B;;;;;;eDxF9D,CACVL,OAAO,CAAC,WAAW,EAAE,CACnBC,KAAK,CAAC,MAAM,EAAEC,KAAK,CAAC;MAAEsD,OAAO,EAAE;IAAC,CAAE,CAAC,CAAC,EACpCrD,UAAU,CAAC,SAAS,EAAE,CACpBC,OAAO,CAAC,mBAAmB,CAAC,CAC7B,CAAC,CACH,CAAC;EACH;AAAA","names":["Validators","trigger","state","style","transition","animate","i0","CounterComponent","constructor","http","formBuilder","toaster","showSuccessToaster","info","showSuccessToasterl","showErrorToaster","showErrorToastern","showErrorToasterli","showErrorToasterla","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","loginForm","openpostModal","console","log","value","onSubmit","isRegistration","valid","post","APIUrl","subscribe","next","error","err","get","params","datas","length","retrievedUsername","retrievedPassword","toggleForm","reset","selectors","decls","vars","consts","template","ctx","opacity"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\counter\\counter.component.ts","D:\\aka\\ClientApp\\src\\app\\counter\\counter.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { ToastService } from 'angular-toastify';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html',\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      state('void', style({ opacity: 0 })),\r\n      transition('* <=> *', [\r\n        animate('300ms ease-in-out'),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class CounterComponent implements OnInit {\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private toaster: ToastService) { }\r\n\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public datas: data[] = [];\r\n  public infoForm!: FormGroup;\r\n  public loginForm!: FormGroup;\r\n  public isRegistration: boolean = true;\r\n  showSuccessToaster() { this.toaster.info('Registered!'); }\r\n  showSuccessToasterl() { this.toaster.info('Valid!'); }\r\n  showErrorToaster() { this.toaster.info('Validation error!!!'); }\r\n  showErrorToastern() { this.toaster.info('Wrong Username or Password !!!'); }\r\n  showErrorToasterli() { this.toaster.info('User Logged in!'); }\r\n  showErrorToasterla() { this.toaster.info('Admin Logged in!'); }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.FName);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.isRegistration) {\r\n      if (this.infoForm.valid) {\r\n        this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n          next: () => {\r\n            console.log(`Posted: ${this.infoForm.value.Username}`);\r\n            this.showSuccessToaster();\r\n            this.ngOnInit(); // Close the modal\r\n          },\r\n          error: (err) => {\r\n            console.log(err);\r\n            console.log('error here!');\r\n          }\r\n        });\r\n      }\r\n      else this.showErrorToaster();\r\n    } else {\r\n      if (this.loginForm.valid) {\r\n        try {\r\n          this.http.get<data[]>(`${this.APIUrl}`, {\r\n            params: { Username: this.loginForm.value } // Passing parameters properly\r\n          }).subscribe({\r\n            next: (value) => {\r\n              this.datas = value;\r\n\r\n              if (this.datas.length > 0) {\r\n                const retrievedUsername = this.datas[0].Username;\r\n                const retrievedPassword = this.datas[0].Password;\r\n\r\n                if (\r\n                  this.loginForm.value.Username === retrievedUsername &&\r\n                  this.loginForm.value.Password === retrievedPassword\r\n                ) {\r\n                  if (this.loginForm.value.ID === 1) {\r\n                    // Log the retrieved Username\r\n                    console.log('Retrieved Username:', retrievedPassword);\r\n                    this.showErrorToasterla();\r\n                  }     \r\n\r\n                } else {\r\n                  this.showErrorToastern();\r\n                }\r\n              } else {\r\n                this.showErrorToastern(); // No matching user found\r\n              }\r\n            },\r\n            error: (err) => {\r\n              console.log(err);\r\n              console.log('Error fetching login data');\r\n              this.showErrorToaster(); // Handle the error gracefully\r\n            },\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n          this.showErrorToaster(); // Handle the error gracefully\r\n        }\r\n      } else {\r\n        this.showErrorToaster(); // Invalid form\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  toggleForm() {\r\n    this.isRegistration = !this.isRegistration;\r\n    this.infoForm.reset();\r\n    this.loginForm.reset();\r\n  }\r\n}\r\n\r\ninterface data {\r\n  ID: number;\r\n  Username: string;\r\n  Password: string;\r\n}\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}\r\n","<div class=\"bg-image\">\r\n    <form class=\"d-flex justify-content-between needs-validation\" [formGroup]=\"isRegistration ? infoForm : loginForm\"\r\n        (ngSubmit)=\"onSubmit()\" novalidate>\r\n        <div id=\"newModal\" tabindex=\"-1\">\r\n            <div class=\"bg-info\">\r\n                <div style=\"width: 600px; height: 450px;\"\r\n                    class=\"mt-5 pt-5 d-flex bg-info-subtle position-relative d-flex justify-content-center bg-light border rounded-4 border-1 border-primary-subtle flex-column\">\r\n                    <div class=\"d-flex justify-content-around\">\r\n                        <h4 class=\"m-3 d-flex justify-content-center\">\r\n                            {{ isRegistration ? 'Registration' : 'Login' }} section\r\n                        </h4>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-floating mb-3\"  *ngIf=\"isRegistration\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"FName\" formControlName=\"FName\"\r\n                                    placeholder=\"Full Name\">\r\n                                <label for=\"FName\">Full Name</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('FName')?.errors?.required && infoForm.get('FName')?.touched\">\r\n                                    Full Name is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('FName')?.errors?.maxlength && infoForm.get('FName')?.touched\">\r\n                                    Full Name should be at most 15 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\" *ngIf=\"isRegistration\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"Username\" formControlName=\"Username\"\r\n                                    placeholder=\"Username\">\r\n                                <label for=\"Username\">Username</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('Username')?.errors?.required && infoForm.get('Username')?.touched\">\r\n                                    Username is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('Username')?.errors?.maxlength && infoForm.get('Username')?.touched\">\r\n                                    Username should be at most 10 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\" *ngIf=\"isRegistration\">\r\n                                <input type=\"password\" class=\"form-control\" id=\"Password\" formControlName=\"Password\"\r\n                                    placeholder=\"Password\">\r\n                                <label for=\"Password\">Password</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('Password')?.errors?.required && infoForm.get('Password')?.touched\">\r\n                                    Password is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('Password')?.errors?.pattern && infoForm.get('Password')?.touched\">\r\n                                    Password should contain at least one uppercase letter and one digit.\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"infoForm.get('Password')?.errors?.maxlength && infoForm.get('Password')?.touched\">\r\n                                    Password should be at most 15 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\" *ngIf=\"!isRegistration\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"Username\" formControlName=\"Username\"\r\n                                    placeholder=\"Username\">\r\n                                <label for=\"Username\">Username</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('Username')?.errors?.required && loginForm.get('Username')?.touched\">\r\n                                    Username is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('Username')?.errors?.maxlength && loginForm.get('Username')?.touched\">\r\n                                    Username should be at most 10 characters long.\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-floating mb-3\"*ngIf=\"!isRegistration\">\r\n                                <input type=\"password\" class=\"form-control\" id=\"Password\" formControlName=\"Password\"\r\n                                    placeholder=\"Password\">\r\n                                <label for=\"Password\">Password</label>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('Password')?.errors?.required && loginForm.get('Password')?.touched\">\r\n                                    Password is required!\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('Password')?.errors?.pattern && loginForm.get('Password')?.touched\">\r\n                                    Password should contain at least one uppercase letter and one digit.\r\n                                </div>\r\n                                <div class=\"invalid-feedback\"\r\n                                    *ngIf=\"loginForm.get('Password')?.errors?.maxlength && loginForm.get('Password')?.touched\">\r\n                                    Password should be at most 15 characters long.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"submit\" style=\"width: 200px;\"\r\n                            class=\"btn btn-outline-info w-80 m-2 me-5 border-1 rounded text-dark shadow bg-body-tertiary\">\r\n                            {{ isRegistration ? 'Register' : 'Login' }}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"toggleForm()\"\r\n                            class=\"btn btn-outline-info w-100 m-2 mx-5 border-1 rounded text-dark shadow bg-body-tertiary\">\r\n                            {{ isRegistration ? 'or Login' : 'or Register' }}\r\n                        </button>\r\n                        \r\n                        <button type=\"button\" [routerLink]=\"['/fetch-data']\"\r\n                            class=\"btn btn-transparent m-2 mx-5 w-100 p-1 text-dark m-2\">All accounts -></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <img src=\"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-captured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-line-design-style-vector.jpg\"\r\n            style=\"width: 600px; height: 440px; --bs-img-opacity: .5;\" class=\"mt-5 img-thumbnail border-0\" alt=\"...\">\r\n    </form>\r\n</div>\r\n<lib-toastify-toast-container></lib-toastify-toast-container>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}