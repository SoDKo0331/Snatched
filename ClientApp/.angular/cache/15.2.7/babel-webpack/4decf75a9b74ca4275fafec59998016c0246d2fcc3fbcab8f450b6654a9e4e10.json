{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-toastify\";\nimport * as i4 from \"@angular/router\";\nexport class ChatsComponent {\n  constructor(http, formBuilder, toaster, route) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.toaster = toaster;\n    this.route = route;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n  }\n  ngOnInit() {\n    this.chatsForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]],\n      roleID: [0]\n    });\n  }\n}\nChatsComponent.ɵfac = function ChatsComponent_Factory(t) {\n  return new (t || ChatsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nChatsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatsComponent,\n  selectors: [[\"app-chats\"]],\n  decls: 18,\n  vars: 0,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [1, \"border\", \"rounded\", \"p-3\", \"chat-box\", 2, \"max-height\", \"300px\", \"overflow-y\", \"scroll\"], [1, \"message\"], [1, \"message\", \"bg-light\"], [1, \"input-group\", \"mt-3\"], [\"type\", \"text\", \"placeholder\", \"Type your message...\", 1, \"form-control\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"]],\n  template: function ChatsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\");\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"strong\");\n      i0.ɵɵtext(7, \"John:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \" Hi there! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"strong\");\n      i0.ɵɵtext(11, \"You:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" Hello! \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 6);\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Send\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AASnE,OAAM,MAAOC,cAAc;EACzBC,YACUC,IAAgB,EAChBC,WAAwB,EACxBC,OAAqB,EACrBC,KAAqB;IAHrB,SAAI,GAAJH,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,YAAO,GAAPC,OAAO;IACP,UAAK,GAALC,KAAK;IAEN,WAAM,GAAG,wCAAwC;EADtD;EAGJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,EAAE,EAAE,CAAC,CAAC,CAAC;MACPC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/DE,QAAQ,EAAE,CACR,EAAE,EACF,CACEf,UAAU,CAACY,QAAQ,EACnBZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,EACxBb,UAAU,CAACgB,OAAO,CAAC,uCAAuC,CAAC,CAC5D,CACF;MACDC,MAAM,EAAE,CAAC,CAAC;KACX,CAAC;EACJ;;AAxBWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAA4B;MACxBA,sBAEM;MACNA,8BAAiB;MAIOA,qBAAK;MAAAA,iBAAS;MAACA,2BAC3B;MAAAA,iBAAM;MACNA,8BAA8B;MAClBA,qBAAI;MAAAA,iBAAS;MAACA,yBAC1B;MAAAA,iBAAM;MAGVA,+BAA8B;MAC1BA,4BAA2E;MAC3EA,+BAAgC;MACkBA,qBAAI;MAAAA,iBAAS","names":["Validators","ChatsComponent","constructor","http","formBuilder","toaster","route","ngOnInit","chatsForm","group","ID","FName","required","maxLength","Username","Password","pattern","roleID","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\chats\\chats.component.ts","D:\\aka\\ClientApp\\src\\app\\chats\\chats.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'angular-toastify';\n\n@Component({\n  selector: 'app-chats',\n  templateUrl: './chats.component.html'\n})\nexport class ChatsComponent implements OnInit {\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private toaster: ToastService,\n    private route: ActivatedRoute,\n  ) { }\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\n  public chatsForm!: FormGroup;\n  ngOnInit() {\n    this.chatsForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: [\n        '',\n        [\n          Validators.required,\n          Validators.maxLength(15),\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\n        ],\n      ],\n      roleID: [0],\n    });\n  }\n}\n","<div class=\"container mt-5\">\n    <div>\n        \n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"border rounded p-3 chat-box\" style=\"max-height: 300px; overflow-y: scroll;\">\n                <div class=\"message\">\n                    <strong>John:</strong> Hi there!\n                </div>\n                <div class=\"message bg-light\">\n                    <strong>You:</strong> Hello!\n                </div>\n                <!-- Add more messages here -->\n            </div>\n            <div class=\"input-group mt-3\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Type your message...\">\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-primary\" type=\"button\">Send</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}