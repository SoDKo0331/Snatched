{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction HomeComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Temperature:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Weather:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Humidity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\")(16, \"strong\");\n    i0.ɵɵtext(17, \"Wind Speed:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weather in \", ctx_r0.weatherData.name, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.main.temp, \" \\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.weather[0].description, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.main.humidity, \"%\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.wind.speed, \" m/s\");\n  }\n}\nexport class HomeComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.city = '';\n  }\n  getWeather() {\n    if (this.city.trim()) {\n      this.weatherService.getWeatherByCity(this.city).subscribe(data => {\n        this.weatherData = data;\n        data.main.temp = data.main.temp - 273.15;\n        console.log(this.weatherData);\n      }, error => {\n        console.error('Error fetching weather data:', error);\n      });\n    }\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1, shrink-to-fit=no\"], [\"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\", \"rel\", \"stylesheet\"], [3, \"ngSubmit\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"id\", \"chatbot-iframe\"], [\"src\", \"https://www.chatbase.co/chatbot-iframe/o2gqZeOI8xSUmlrA8kdfr\", \"width\", \"300\", \"height\", \"400\", \"frameborder\", \"0\", \"allowfullscreen\", \"\", 1, \"position-absolute\", \"bottom-0\", \"end-0\", \"m-5\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Your University System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"link\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"body\")(8, \"div\")(9, \"h1\");\n      i0.ɵɵtext(10, \"Weather Checker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.getWeather();\n      });\n      i0.ɵɵelementStart(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Enter city name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Check Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, HomeComponent_div_17_Template, 19, 5, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 9);\n      i0.ɵɵelement(19, \"iframe\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAsBQA,2BAAyB;IACnBA,YAAiC;IAAAA,iBAAK;IAC1CA,yBAAG;IAAQA,4BAAY;IAAAA,iBAAS;IAACA,YAA6B;IAAAA,iBAAI;IAClEA,yBAAG;IAAQA,wBAAQ;IAAAA,iBAAS;IAACA,aAAwC;IAAAA,iBAAI;IACzEA,0BAAG;IAAQA,0BAAS;IAAAA,iBAAS;IAACA,aAAgC;IAAAA,iBAAI;IAClEA,0BAAG;IAAQA,4BAAW;IAAAA,iBAAS;IAACA,aAAgC;IAAAA,iBAAI;;;;IAJhEA,eAAiC;IAAjCA,iEAAiC;IACJA,eAA6B;IAA7BA,oEAA6B;IACjCA,eAAwC;IAAxCA,yEAAwC;IACvCA,eAAgC;IAAhCA,iEAAgC;IAC9BA,eAAgC;IAAhCA,iEAAgC;;;ACd1E,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,SAAI,GAAW,EAAE;EAGqC;EACtDC,UAAU;IACR,IAAI,IAAI,CAACC,IAAI,CAACC,IAAI,EAAE,EAAE;MACpB,IAAI,CAACH,cAAc,CAACI,gBAAgB,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,SAAS,CACvDC,IAAI,IAAG;QACL,IAAI,CAACC,WAAW,GAAGD,IAAI;QACvBA,IAAI,CAACE,IAAI,CAACC,IAAI,GAAGH,IAAI,CAACE,IAAI,CAACC,IAAI,GAAE,MAAM;QACvCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAAC;MAC/B,CAAC,EACDK,KAAK,IAAG;QACNF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CACF;;EAEL;;AAlBWd,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ1BpB,+BAAgB;MAGZA,0BAAsB;MAEtBA,6BAAO;MAAAA,sCAAsB;MAAAA,iBAAQ;MACrCA,0BAAoG;MACxGA,iBAAO;MAEPA,4BAAM;MAEMA,gCAAe;MAAAA,iBAAK;MAGxBA,gCAAgC;MAA1BA;QAAA,OAAYqB,gBAAY;MAAA,EAAC;MAC7BrB,iCAAkB;MAAAA,iCAAgB;MAAAA,iBAAQ;MAC1CA,iCAAqE;MAAxCA;QAAA;MAAA,EAAkB;MAA/CA,iBAAqE;MACrEA,kCAAsB;MAAAA,8BAAa;MAAAA,iBAAS;MAI9CA,iEAMM;MACRA,iBAAM;MAGRA,+BAAyB;MACrBA,8BAE6B;MACjCA,iBAAM;;;MAnB6BA,gBAAkB;MAAlBA,kCAAkB;MAK3CA,eAAiB;MAAjBA,sCAAiB","names":["i0","HomeComponent","constructor","weatherService","getWeather","city","trim","getWeatherByCity","subscribe","data","weatherData","main","temp","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\home\\home.component.html","D:\\aka\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <title>Your University System</title>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n</head>\r\n\r\n<body>\r\n    <div>\r\n        <h1>Weather Checker</h1>\r\n      \r\n        <!-- Form to submit city name -->\r\n        <form (ngSubmit)=\"getWeather()\">\r\n          <label for=\"city\">Enter city name:</label>\r\n          <input type=\"text\" id=\"city\" [(ngModel)]=\"city\" name=\"city\" required>\r\n          <button type=\"submit\">Check Weather</button>\r\n        </form>\r\n      \r\n        <!-- Display weather data -->\r\n        <div *ngIf=\"weatherData\">\r\n          <h2>Weather in {{ weatherData.name }}</h2>\r\n          <p><strong>Temperature:</strong> {{ weatherData.main.temp}} °C</p>\r\n          <p><strong>Weather:</strong> {{ weatherData.weather[0].description }}</p>\r\n          <p><strong>Humidity:</strong> {{ weatherData.main.humidity }}%</p>\r\n          <p><strong>Wind Speed:</strong> {{ weatherData.wind.speed }} m/s</p>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n    <div id=\"chatbot-iframe\">\r\n        <iframe class=\"position-absolute bottom-0 end-0 m-5\"\r\n            src=\"https://www.chatbase.co/chatbot-iframe/o2gqZeOI8xSUmlrA8kdfr\" width=\"300\" height=\"400\" frameborder=\"0\"\r\n            allowfullscreen></iframe>\r\n    </div>\r\n\r\n    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js\"></script>\r\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ToastService } from 'angular-toastify';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WeatherService } from '../weather.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  city: string = '';\r\n  weatherData: any;\r\n\r\n  constructor(private weatherService: WeatherService) { }\r\n  getWeather() {\r\n    if (this.city.trim()) {\r\n      this.weatherService.getWeatherByCity(this.city).subscribe(\r\n        data => {\r\n          this.weatherData = data;\r\n          data.main.temp = data.main.temp -273.15;\r\n          console.log(this.weatherData);\r\n        },\r\n        error => {\r\n          console.error('Error fetching weather data:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}