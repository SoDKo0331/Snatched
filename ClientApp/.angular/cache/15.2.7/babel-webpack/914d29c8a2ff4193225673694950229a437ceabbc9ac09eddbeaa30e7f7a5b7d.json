{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CounterComponent = class CounterComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.FName);\n  }\n  Posting() {\n    if (this.infoForm.valid) {\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n        next: () => {\n          console.log(`Posted: ${this.infoForm.value.Username}`);\n          this.closeNewModal(); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  closeNewModal() {\n    const modal = document.getElementById('newModal');\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      document.body.classList.remove('modal-open');\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      if (modalBackdrop) {\n        modalBackdrop.remove();\n      }\n    }\n  }\n};\nCounterComponent = __decorate([Component({\n  selector: 'app-counter-component',\n  templateUrl: './counter.component.html'\n})], CounterComponent);\nexport { CounterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAM5D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAC3BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAGhD,WAAM,GAAG,wCAAwC;IAEnD,UAAK,GAAY,EAAE;EAJ1B;EAQAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,EAAE,EAAE,CAAC,CAAC,CAAC;MACPC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/DE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EAC7CX,UAAU,CAACc,OAAO,CAAC,0CAA0C,CAAC,CAAC;KAChF,CAAC;EACJ;EACAC,aAAa;IACXC,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG,IAAI,CAACX,QAAQ,CAACY,KAAK,CAACT,KAAK,CAAC;EACtD;EACAU,OAAO;IACL,IAAI,IAAI,CAACb,QAAQ,CAACc,KAAK,EAAE;MACvB,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,EAAE,EAAE,IAAI,CAAChB,QAAQ,CAACY,KAAK,CAAC,CAACK,SAAS,CAAC;QAC9DC,IAAI,EAAE,MAAK;UACTR,OAAO,CAACC,GAAG,CAAC,WAAW,IAAI,CAACX,QAAQ,CAACY,KAAK,CAACN,QAAQ,EAAE,CAAC;UACtD,IAAI,CAACa,aAAa,EAAE,CAAC,CAAC;QACxB,CAAC;;QACDC,KAAK,EAAGC,GAAG,IAAI;UACbX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;UAChBX,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC5B;OACD,CAAC;;EAEN;EAEAQ,aAAa;IACX,MAAMG,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACjD,IAAIF,KAAK,EAAE;MACTA,KAAK,CAACG,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;MAC9BJ,KAAK,CAACK,KAAK,CAACC,OAAO,GAAG,MAAM;MAC5BL,QAAQ,CAACM,IAAI,CAACJ,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;MAC5C,MAAMI,aAAa,GAAGP,QAAQ,CAACQ,aAAa,CAAC,iBAAiB,CAAC;MAC/D,IAAID,aAAa,EAAE;QACjBA,aAAa,CAACJ,MAAM,EAAE;;;EAG5B;CAED;AAlDY/B,gBAAgB,eAJ5BF,SAAS,CAAC;EACTuC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE;CACd,CAAC,GACWtC,gBAAgB,CAkD5B;SAlDYA,gBAAgB","names":["Component","Validators","CounterComponent","constructor","http","formBuilder","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","openpostModal","console","log","value","Posting","valid","post","APIUrl","subscribe","next","closeNewModal","error","err","modal","document","getElementById","classList","remove","style","display","body","modalBackdrop","querySelector","selector","templateUrl"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\counter\\counter.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n  public accForm!: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: ['', [Validators.required, Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n  }\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.FName);\r\n  }\r\n  Posting() {\r\n    if (this.infoForm.valid) {\r\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Posted: ${this.infoForm.value.Username}`);\r\n          this.closeNewModal(); // Close the modal\r\n        },\r\n        error: (err) => { \r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  closeNewModal() {\r\n    const modal = document.getElementById('newModal');\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      document.body.classList.remove('modal-open');\r\n      const modalBackdrop = document.querySelector('.modal-backdrop');\r\n      if (modalBackdrop) {\r\n        modalBackdrop.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}