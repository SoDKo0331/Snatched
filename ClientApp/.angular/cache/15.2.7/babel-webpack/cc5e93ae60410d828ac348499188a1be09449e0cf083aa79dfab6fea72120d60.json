{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-toastify\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction ChatsComponent_strong_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"strong\");\n  }\n}\nfunction ChatsComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction ChatsComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nexport class ChatsComponent {\n  constructor(http, formBuilder, toaster, route) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.toaster = toaster;\n    this.route = route;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n  }\n  ngOnInit() {\n    this.chatsForm = this.formBuilder.group({\n      sender_id: [localStorage.getItem('id')],\n      Username: [localStorage.getItem('username')],\n      text: ['', [Validators.required, Validators.maxLength(100)]]\n    });\n  }\n  showSuccessToasters() {\n    this.toaster.success('Sent!');\n  }\n  showSuccessToasterf() {\n    this.toaster.error('Send Failed!');\n  }\n  sendChat() {\n    this.http.post(`${this.APIUrl}/login`, this.chatsForm.value).subscribe({\n      next: response => {\n        this.showSuccessToasters();\n      },\n      error: err => {\n        console.log(err);\n        this.showSuccessToasterf();\n      }\n    });\n  }\n}\nChatsComponent.ɵfac = function ChatsComponent_Factory(t) {\n  return new (t || ChatsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nChatsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatsComponent,\n  selectors: [[\"app-chats\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [1, \"border\", \"rounded\", \"p-3\", \"chat-box\", 2, \"max-height\", \"300px\", \"overflow-y\", \"scroll\"], [1, \"message\"], [4, \"ngIf\"], [1, \"message\", \"bg-light\"], [1, \"input-group\", \"mt-3\"], [\"type\", \"text\", \"placeholder\", \"Type your message...\", 1, \"form-control\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function ChatsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\");\n      i0.ɵɵelementStart(2, \"form\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtemplate(7, ChatsComponent_strong_7_Template, 1, 0, \"strong\", 6);\n      i0.ɵɵtemplate(8, ChatsComponent_span_8_Template, 1, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"strong\");\n      i0.ɵɵtext(11, \"You:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, ChatsComponent_span_12_Template, 1, 0, \"span\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 8);\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function ChatsComponent_Template_button_click_16_listener() {\n        return ctx.sendChat();\n      });\n      i0.ɵɵtext(17, \"Send\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.chatsForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.chatsForm.get(\"username\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.chatsForm.get(\"text\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.chatsForm.get(\"text\"));\n    }\n  },\n  dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICQ3CC,yBAAmD;;;;;IACnDA,uBAA2C;;;;;IAI3CA,uBAA2C;;;ADJnE,OAAM,MAAOC,cAAc;EACzBC,YACUC,IAAgB,EAChBC,WAAwB,EACxBC,OAAqB,EACrBC,KAAqB;IAHrB,SAAI,GAAJH,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,YAAO,GAAPC,OAAO;IACP,UAAK,GAALC,KAAK;IAEN,WAAM,GAAG,wCAAwC;EADtD;EAGJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,SAAS,EAAE,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC;MACvCC,QAAQ,EAAE,CAACF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC5CE,IAAI,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,GAAG,CAAC,CAAC;KAC5D,CAAC;EACJ;EACAC,mBAAmB;IACjB,IAAI,CAACZ,OAAO,CAACa,OAAO,CAAC,OAAO,CAAC;EAC/B;EACAC,mBAAmB;IACjB,IAAI,CAACd,OAAO,CAACe,KAAK,CAAC,cAAc,CAAC;EACpC;EACAC,QAAQ;IACN,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE,IAAI,CAACf,SAAS,CAACgB,KAAK,CAAC,CAACC,SAAS,CAAC;MACrEC,IAAI,EAAGC,QAAa,IAAI;QACtB,IAAI,CAACV,mBAAmB,EAAE;MAC5B,CAAC;MACDG,KAAK,EAAGQ,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACT,mBAAmB,EAAE;MAC5B;KACD,CAAC;EACJ;;AAhCWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BnC,8BAA4B;MACxBA,sBAEM;MACNA,+BAA8B;MAKVA,qEAAmD;MACnDA,iEAA2C;MAC/CA,iBAAM;MACNA,8BAA8B;MAClBA,qBAAI;MAAAA,iBAAS;MACrBA,mEAA2C;MAC/CA,iBAAM;MAGVA,+BAA8B;MAC1BA,4BAA2E;MAC3EA,gCAAgC;MACIA;QAAA,OAASoC,cAAU;MAAA,EAAC;MAAepC,qBAAI;MAAAA,iBAAS;;;MAjB9FA,eAAuB;MAAvBA,yCAAuB;MAKAA,eAA+B;MAA/BA,oDAA+B;MACjCA,eAA2B;MAA3BA,gDAA2B;MAI3BA,eAA2B;MAA3BA,gDAA2B","names":["Validators","i0","ChatsComponent","constructor","http","formBuilder","toaster","route","ngOnInit","chatsForm","group","sender_id","localStorage","getItem","Username","text","required","maxLength","showSuccessToasters","success","showSuccessToasterf","error","sendChat","post","APIUrl","value","subscribe","next","response","err","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\chats\\chats.component.ts","D:\\aka\\ClientApp\\src\\app\\chats\\chats.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'angular-toastify';\n\n@Component({\n  selector: 'app-chats',\n  templateUrl: './chats.component.html'\n})\nexport class ChatsComponent implements OnInit {\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private toaster: ToastService,\n    private route: ActivatedRoute,\n  ) { }\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\n  public chatsForm!: FormGroup;\n  ngOnInit() {\n    this.chatsForm = this.formBuilder.group({\n      sender_id: [localStorage.getItem('id')],\n      Username: [localStorage.getItem('username')],\n      text: ['', [Validators.required, Validators.maxLength(100)]],\n    });\n  }\n  showSuccessToasters() {\n    this.toaster.success('Sent!');\n  }\n  showSuccessToasterf() {\n    this.toaster.error('Send Failed!');\n  }\n  sendChat() {\n    this.http.post(`${this.APIUrl}/login`, this.chatsForm.value).subscribe({\n      next: (response: any) => {\n        this.showSuccessToasters();\n      },\n      error: (err) => {\n        console.log(err);\n        this.showSuccessToasterf();\n      },\n    });\n  }\n}\n","<div class=\"container mt-5\">\n    <div>\n\n    </div>\n    <form [formGroup]=\"chatsForm\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                <div class=\"border rounded p-3 chat-box\" style=\"max-height: 300px; overflow-y: scroll;\">\n                    <div class=\"message\">\n                        <strong *ngIf=\"chatsForm.get('username')\"></strong>\n                        <span *ngIf=\"chatsForm.get('text')\"></span>\n                    </div>\n                    <div class=\"message bg-light\">\n                        <strong>You:</strong>\n                        <span *ngIf=\"chatsForm.get('text')\"></span>\n                    </div>\n                    <!-- Add more messages here -->\n                </div>\n                <div class=\"input-group mt-3\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Type your message...\">\n                    <div class=\"input-group-append\">\n                        <button class=\"btn btn-primary\" (click)=\"sendChat()\" type=\"button\">Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}