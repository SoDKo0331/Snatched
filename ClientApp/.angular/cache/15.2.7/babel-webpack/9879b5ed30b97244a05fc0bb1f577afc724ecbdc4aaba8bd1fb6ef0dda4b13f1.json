{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_tbody_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tbody_15_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openEditModal(item_r5));\n    });\n    i0.ɵɵtext(12, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tbody_15_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.deleteInfo(item_r5.ID));\n    });\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", item_r5.ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r5.FName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r5.Username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r5.Password);\n  }\n}\nfunction FetchDataComponent_div_16_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_16_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_16_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 20)(2, \"div\", 5)(3, \"div\", 6)(4, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_div_16_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.updating());\n    });\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"div\");\n    i0.ɵɵtext(7, \" Full Name \");\n    i0.ɵɵtemplate(8, FetchDataComponent_div_16_span_8_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵtext(10, \" Username \");\n    i0.ɵɵtemplate(11, FetchDataComponent_div_16_span_11_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelement(12, \"input\", 10);\n    i0.ɵɵtext(13, \" Password \");\n    i0.ɵɵtemplate(14, FetchDataComponent_div_16_span_14_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelement(15, \"input\", 11)(16, \"input\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 13)(18, \"button\", 14);\n    i0.ɵɵtext(19, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 15);\n    i0.ɵɵtext(21, \"Save changes\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.accForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.accForm.get(\"FName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r1.accForm.get(\"FName\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r1.accForm.get(\"Username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r1.accForm.get(\"Username\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r1.accForm.get(\"Password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r1.accForm.get(\"Password\")) == null ? null : tmp_3_0.touched));\n  }\n}\nfunction FetchDataComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.getItems();\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(10)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n    this.accForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.maxLength(15)]],\n      Username: ['', [Validators.maxLength(10)]],\n      Password: ['', [Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  getItems() {\n    this.http.get(this.APIUrl).subscribe({\n      next: value => {\n        this.items = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  openEditModal(item) {\n    this.accForm.patchValue(item);\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.FName);\n  }\n  Posting() {\n    if (this.infoForm.valid) {\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n        next: () => {\n          console.log(`Posted: ${this.infoForm.value.Username}`);\n          this.getItems();\n          this.closeNewModal(); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  updating() {\n    if (this.accForm.valid) {\n      this.http.put(`${this.APIUrl}`, this.accForm.value).subscribe({\n        next: () => {\n          console.log(`Updated by ID: ${this.accForm.value.ID}`);\n          this.getItems();\n          this.closeEditModal(); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  closeEditModal() {\n    const modal = document.getElementById('exampleModal');\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      document.body.classList.remove('modal-open');\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      if (modalBackdrop) {\n        modalBackdrop.remove();\n      }\n    }\n  }\n  closeNewModal() {\n    const modal = document.getElementById('newModal');\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      document.body.classList.remove('modal-open');\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      if (modalBackdrop) {\n        modalBackdrop.remove();\n      }\n    }\n  }\n  deleteInfo(ID) {\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\n      next: () => {\n        console.log(`Deleted by ID: ${ID}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 39,\n  vars: 6,\n  consts: [[1, \"table\", \"table-striped\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#newModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"newModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-body\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"FName\", 1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"Username\", 1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"Password\", 1, \"input-group\", \"mb-3\"], [\"type\", \"hidden\", \"formControlName\", \"ID\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"text\", \"disabled\", \"\", 1, \"input-group-text\", 3, \"value\"], [\"disabled\", \"\", 1, \"input-group-text\", 3, \"value\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"text-danger\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"ALL Accounts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_button_click_13_listener() {\n        return ctx.openpostModal();\n      });\n      i0.ɵɵtext(14, \"Include new Info\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, FetchDataComponent_tbody_15_Template, 16, 4, \"tbody\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, FetchDataComponent_div_16_Template, 22, 4, \"div\", 2);\n      i0.ɵɵelementStart(17, \"div\")(18, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_Template_form_ngSubmit_18_listener() {\n        return ctx.Posting();\n      });\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"div\", 7)(23, \"div\");\n      i0.ɵɵtext(24, \" Full Name \");\n      i0.ɵɵtemplate(25, FetchDataComponent_span_25_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelement(26, \"input\", 9);\n      i0.ɵɵtext(27, \" Username \");\n      i0.ɵɵtemplate(28, FetchDataComponent_span_28_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelement(29, \"input\", 10);\n      i0.ɵɵtext(30, \" Password \");\n      i0.ɵɵtemplate(31, FetchDataComponent_span_31_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelement(32, \"input\", 11)(33, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 13)(35, \"button\", 14);\n      i0.ɵɵtext(36, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 15);\n      i0.ɵɵtext(38, \"Create\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.infoForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.infoForm.get(\"FName\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.infoForm.get(\"FName\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.infoForm.get(\"Username\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.infoForm.get(\"Username\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.infoForm.get(\"Password\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.infoForm.get(\"Password\")) == null ? null : tmp_5_0.touched));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","FetchDataComponent","constructor","http","formBuilder","getItems","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","accForm","get","APIUrl","subscribe","next","value","items","error","err","console","log","openEditModal","item","patchValue","openpostModal","Posting","valid","post","closeNewModal","updating","put","closeEditModal","modal","document","getElementById","classList","remove","style","display","body","modalBackdrop","querySelector","deleteInfo","delete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n  public accForm!: FormGroup;\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: ['', [Validators.required, Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n    this.accForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.maxLength(15)]],\r\n      Username: ['', [Validators.maxLength(10)]],\r\n      Password: ['', [Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.http.get<items[]>(this.APIUrl).subscribe({\r\n      next: (value) => {\r\n        this.items = value;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  openEditModal(item: items) {\r\n    this.accForm.patchValue(item);\r\n  }\r\n\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.FName);\r\n  }\r\n\r\n  Posting() {\r\n    if (this.infoForm.valid) {\r\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Posted: ${this.infoForm.value.Username}`);\r\n          this.getItems();\r\n          this.closeNewModal(); // Close the modal\r\n        },\r\n        error: (err) => { \r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  updating() {\r\n    if (this.accForm.valid) {\r\n      this.http.put(`${this.APIUrl}`, this.accForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Updated by ID: ${this.accForm.value.ID}`);\r\n          this.getItems();\r\n          this.closeEditModal(); // Close the modal\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEditModal() {\r\n    const modal = document.getElementById('exampleModal');\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      document.body.classList.remove('modal-open');\r\n      const modalBackdrop = document.querySelector('.modal-backdrop');\r\n      if (modalBackdrop) {\r\n        modalBackdrop.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeNewModal() {\r\n    const modal = document.getElementById('newModal');\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      document.body.classList.remove('modal-open');\r\n      const modalBackdrop = document.querySelector('.modal-backdrop');\r\n      if (modalBackdrop) {\r\n        modalBackdrop.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  deleteInfo(ID: number) {\r\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\r\n      next: () => {\r\n        console.log(`Deleted by ID: ${ID}`);\r\n        this.getItems()\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}","<h1>ALL Accounts</h1>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>Full Name</th>\r\n      <th>Username</th>\r\n      <th>Password</th>\r\n    </tr>\r\n    <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#newModal\"\r\n      (click)=\"openpostModal()\">Include new Info</button>\r\n  </thead>\r\n  <tbody *ngFor=\"let item of items\">\r\n    <tr>\r\n      <td>\r\n        <input class=\"input-group-text\" type=\"text\" [value]=\"item.ID\" disabled />\r\n      </td>\r\n      <td>\r\n        <input class=\"input-group-text\" type=\"text\" [value]=\"item.FName\" disabled />\r\n      </td>\r\n      <td>\r\n        <input class=\"input-group-text\" [value]=\"item.Username\" disabled />\r\n      </td>\r\n      <td>\r\n        <input class=\"input-group-text\" type=\"text\" [value]=\"item.Password\" disabled />\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n          (click)=\"openEditModal(item)\">\r\n          Edit\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-danger\" (click)=\"deleteInfo(item.ID)\" type=\"button\">\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Modal update -->\r\n<div *ngFor=\"let item of items\">\r\n  <div id=\"exampleModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <form [formGroup]=\"accForm\" (ngSubmit)=\"updating()\">\r\n          <!-- ... Modal header ... -->\r\n          <div class=\"modal-body\">\r\n            <div>\r\n              Full Name\r\n              <span class=\"text-danger\" *ngIf=\"accForm.get('FName')?.invalid && accForm.get('FName')?.touched\">is required!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" formControlName=\"FName\" />\r\n              Username\r\n              <span class=\"text-danger\" *ngIf=\"accForm.get('Username')?.invalid && accForm.get('Username')?.touched\">is required!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" formControlName=\"Username\" />\r\n              Password\r\n              <span class=\"text-danger\" *ngIf=\"accForm.get('Password')?.invalid && accForm.get('Password')?.touched\">is required!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" formControlName=\"Password\" />\r\n              <!-- ... Similar markup for Username and Password ... -->\r\n              <input type=\"hidden\" formControlName=\"ID\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- new modal -->\r\n<div>\r\n  <form [formGroup]=\"infoForm\" (ngSubmit)=\"Posting()\">\r\n    <div class=\"modal fade\" id=\"newModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <!-- ... Modal header ... -->\r\n          <div class=\"modal-body\">\r\n            <div>\r\n              Full Name\r\n              <span class=\"text-danger\" *ngIf=\"infoForm.get('FName')?.invalid && infoForm.get('FName')?.touched\">is required!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" formControlName=\"FName\" />\r\n              Username\r\n              <span class=\"text-danger\" *ngIf=\"infoForm.get('Username')?.invalid && infoForm.get('Username')?.touched\">is required!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" formControlName=\"Username\" />\r\n              Password\r\n              <span class=\"text-danger\" *ngIf=\"infoForm.get('Password')?.invalid && infoForm.get('Password')?.touched\">is required!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" formControlName=\"Password\" />\r\n              <!-- ... Similar markup for Username and Password ... -->\r\n              <input type=\"hidden\" formControlName=\"ID\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Create</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}