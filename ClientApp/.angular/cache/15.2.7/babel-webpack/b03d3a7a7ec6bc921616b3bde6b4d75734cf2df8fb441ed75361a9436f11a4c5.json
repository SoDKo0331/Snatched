{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tr_16_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const item_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openEditModal(item_r7));\n    });\n    i0.ɵɵtext(11, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tr_16_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const item_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteInfo(item_r7.ID));\n    });\n    i0.ɵɵtext(14, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.ID, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.FName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.Username, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.Password, \" \");\n  }\n}\nfunction FetchDataComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"Full Name is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Full Name must not exceed 20 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"Username is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must not exceed 10 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"Password is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must not exceed 15 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.getItems();\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(20)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  getItems() {\n    this.http.get(this.APIUrl).subscribe({\n      next: value => {\n        this.items = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  Posting() {\n    if (this.infoForm.valid) {\n      this.updating();\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n        next: () => {\n          console.log(`Posted: ${this.infoForm.value.ID}`);\n          this.getItems();\n        },\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  updating() {\n    this.http.put(`${this.APIUrl}`, this.infoForm.value).subscribe({\n      next: () => {\n        console.log(`Updated by ID: ${this.infoForm.value.ID}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n        console.log(\"error here!\");\n      }\n    });\n  }\n  deleteInfo(ID) {\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\n      next: () => {\n        console.log(`Deleted by ID: ${ID}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  openEditModal(item) {\n    this.infoForm.patchValue(item);\n  }\n  openpostModal() {\n    // Reset the form fields when opening the modal\n    this.infoForm.reset();\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 42,\n  vars: 8,\n  consts: [[1, \"table\", \"table-striped\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"FName\", 1, \"input-group\", \"mb-3\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"Username\", 1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"Password\", 1, \"input-group\", \"mb-3\"], [\"type\", \"hidden\", \"formControlName\", \"ID\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"text-danger\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"ALL Accounts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_button_click_13_listener() {\n        return ctx.openpostModal();\n      });\n      i0.ɵɵtext(14, \"Include new Info\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, FetchDataComponent_tr_16_Template, 15, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"div\", 4)(19, \"div\", 5)(20, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_Template_form_ngSubmit_20_listener() {\n        return ctx.Posting();\n      });\n      i0.ɵɵelementStart(21, \"div\", 7)(22, \"h1\", 8);\n      i0.ɵɵtext(23, \"Modal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 10)(26, \"div\");\n      i0.ɵɵtemplate(27, FetchDataComponent_span_27_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelement(28, \"input\", 12);\n      i0.ɵɵtemplate(29, FetchDataComponent_div_29_Template, 2, 0, \"div\", 13);\n      i0.ɵɵtemplate(30, FetchDataComponent_span_30_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelement(31, \"input\", 14);\n      i0.ɵɵtemplate(32, FetchDataComponent_div_32_Template, 2, 0, \"div\", 13);\n      i0.ɵɵtemplate(33, FetchDataComponent_span_33_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelement(34, \"input\", 15);\n      i0.ɵɵtemplate(35, FetchDataComponent_div_35_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelement(36, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 17)(38, \"button\", 18);\n      i0.ɵɵtext(39, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 19);\n      i0.ɵɵtext(41, \"Save changes\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.infoForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.infoForm.get(\"FName\")) == null ? null : tmp_2_0.hasError(\"required\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.infoForm.get(\"FName\")) == null ? null : tmp_3_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.infoForm.get(\"Username\")) == null ? null : tmp_4_0.hasError(\"required\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.infoForm.get(\"Username\")) == null ? null : tmp_5_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.infoForm.get(\"Password\")) == null ? null : tmp_6_0.hasError(\"required\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.infoForm.get(\"Password\")) == null ? null : tmp_7_0.hasError(\"maxlength\"));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","FetchDataComponent","constructor","http","formBuilder","getItems","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","get","APIUrl","subscribe","next","value","items","error","err","console","log","Posting","valid","updating","post","put","deleteInfo","delete","openEditModal","item","patchValue","openpostModal","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(20)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: ['', [Validators.required, Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.http.get<items[]>(this.APIUrl).subscribe({\r\n      next: (value) => {\r\n        this.items = value;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  Posting() {\r\n    if (this.infoForm.valid) {\r\n      this.updating();\r\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Posted: ${this.infoForm.value.ID}`);\r\n          this.getItems();\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  updating() {\r\n    this.http.put(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n      next: () => {\r\n        console.log(`Updated by ID: ${this.infoForm.value.ID}`);\r\n        this.getItems();\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n        console.log(\"error here!\");\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteInfo(ID: number) {\r\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\r\n      next: () => {\r\n        console.log(`Deleted by ID: ${ID}`);\r\n        this.getItems();\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  openEditModal(item: items) {\r\n    this.infoForm.patchValue(item);\r\n  }\r\n\r\n  openpostModal() {\r\n    // Reset the form fields when opening the modal\r\n    this.infoForm.reset();\r\n  }\r\n}\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}\r\n","<h1>ALL Accounts</h1>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>Full Name</th>\r\n      <th>Username</th>\r\n      <th>Password</th>\r\n    </tr>\r\n    <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n      (click)=\"openpostModal()\">Include new Info</button>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let item of items\">\r\n      <td>\r\n        {{ item.ID }}\r\n      </td>\r\n      <td>\r\n        {{ item.FName }}\r\n      </td>\r\n      <td>\r\n        {{ item.Username }}\r\n      </td>\r\n      <td>\r\n        {{ item.Password }}\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n          (click)=\"openEditModal(item)\">\r\n          Edit\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-danger\" (click)=\"deleteInfo(item.ID)\" type=\"button\">\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Modal update -->\r\n<div id=\"exampleModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <form [formGroup]=\"infoForm\" (ngSubmit)=\"Posting()\">\r\n        <div class=\"modal-header\">\r\n          <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Modal</h1>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div>\r\n            <span class=\"text-danger\" *ngIf=\"infoForm.get('FName')?.hasError('required')\">Full Name is required!</span>\r\n            <input type=\"text\" class=\"input-group mb-3\" formControlName=\"FName\" />\r\n            <div *ngIf=\"infoForm.get('FName')?.hasError('maxlength')\">Full Name must not exceed 20 characters</div>\r\n\r\n            <span class=\"text-danger\" *ngIf=\"infoForm.get('Username')?.hasError('required')\">Username is required!</span>\r\n            <input type=\"text\" class=\"input-group mb-3\" formControlName=\"Username\" />\r\n            <div *ngIf=\"infoForm.get('Username')?.hasError('maxlength')\">Username must not exceed 10 characters</div>\r\n\r\n            <span class=\"text-danger\" *ngIf=\"infoForm.get('Password')?.hasError('required')\">Password is required!</span>\r\n            <input type=\"text\" class=\"input-group mb-3\" formControlName=\"Password\" />\r\n            <div *ngIf=\"infoForm.get('Password')?.hasError('maxlength')\">Password must not exceed 15 characters</div>\r\n            <!-- ... Similar markup for Username and Password ... -->\r\n            <input type=\"hidden\" formControlName=\"ID\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}