{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_tbody_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tbody_15_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openEditModal(item_r2));\n    });\n    i0.ɵɵtext(12, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tbody_15_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteInfo(item_r2.ID));\n    });\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", item_r2.ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r2.FName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r2.Username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r2.Password);\n  }\n}\nfunction FetchDataComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23)(2, \"div\", 5)(3, \"div\", 6)(4, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_div_16_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updating());\n    });\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"h1\", 8);\n    i0.ɵɵtext(7, \"Editing Modal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"button\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 10)(10, \"div\")(11, \"span\", 11);\n    i0.ɵɵtext(12, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_div_16_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.editedInfo.FName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 11);\n    i0.ɵɵtext(15, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_div_16_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.editedInfo.Username = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"span\", 11);\n    i0.ɵɵtext(18, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_div_16_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.editedInfo.Password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_div_16_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.editedInfo.ID = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 16)(22, \"button\", 17);\n    i0.ɵɵtext(23, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 18);\n    i0.ɵɵtext(25, \"Save changes\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedInfo.FName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedInfo.Username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedInfo.Password);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedInfo.ID);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.getItems();\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(10)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  getItems() {\n    this.http.get(this.APIUrl).subscribe({\n      next: value => {\n        this.items = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  openEditModal(item) {\n    this.infoForm.patchValue(item);\n  }\n  openpostModal() {\n    this.infoForm.reset();\n  }\n  Posting() {\n    if (this.infoForm.valid) {\n      // Only submit if form is valid\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n        next: () => {\n          console.log(`Posted: ${this.infoForm.value.ID}`);\n          this.getItems();\n          $('#newModal').modal('hide'); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  updating() {\n    if (this.infoForm.valid) {\n      // Only submit if form is valid\n      this.http.put(`${this.APIUrl}`, this.infoForm.value).subscribe({\n        next: () => {\n          console.log(`Updated by ID: ${this.infoForm.value.ID}`);\n          this.getItems();\n          $('#exampleModal').modal('hide'); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log(\"error here!\");\n        }\n      });\n    }\n  }\n  deleteInfo(ID) {\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\n      next: () => {\n        console.log(`Deleted by ID: ${ID}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 43,\n  vars: 6,\n  consts: [[1, \"table\", \"table-striped\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#newModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"id\", \"newModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"text-danger\"], [\"type\", \"text\", \"minlength\", \"3\", \"maxlength\", \"15\", \"name\", \"FName\", 1, \"input-group\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"minlength\", \"3\", \"maxlength\", \"15\", \"name\", \"Username\", 1, \"input-group\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"minlength\", \"3\", \"maxlength\", \"15\", \"name\", \"Password\", 1, \"input-group\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"hidden\", \"name\", \"ID\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"text\", \"disabled\", \"\", 1, \"input-group-text\", 3, \"value\"], [\"disabled\", \"\", 1, \"input-group-text\", 3, \"value\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"type\", \"text\", \"name\", \"FName\", 1, \"input-group\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"Username\", 1, \"input-group\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"Password\", 1, \"input-group\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"ALL Accounts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_button_click_13_listener() {\n        return ctx.openpostModal();\n      });\n      i0.ɵɵtext(14, \"Include new Info\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, FetchDataComponent_tbody_15_Template, 16, 4, \"tbody\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, FetchDataComponent_div_16_Template, 26, 4, \"div\", 2);\n      i0.ɵɵelementStart(17, \"div\")(18, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_Template_form_ngSubmit_18_listener() {\n        return ctx.Posting();\n      });\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"div\", 7)(23, \"h1\", 8);\n      i0.ɵɵtext(24, \" Creating Modal \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"div\")(28, \"span\", 11);\n      i0.ɵɵtext(29, \"Full Name required!!!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.editedInfo.FName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"span\", 11);\n      i0.ɵɵtext(32, \"Username required!!!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.editedInfo.Username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"span\", 11);\n      i0.ɵɵtext(35, \"Password required!!!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.editedInfo.Password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_Template_input_ngModelChange_37_listener($event) {\n        return ctx.editedInfo.ID = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"div\", 16)(39, \"button\", 17);\n      i0.ɵɵtext(40, \" Close \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 18);\n      i0.ɵɵtext(42, \"Create\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.editedInfo.FName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.editedInfo.Username);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.editedInfo.Password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.editedInfo.ID);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinLengthValidator, i2.MaxLengthValidator, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","FetchDataComponent","constructor","http","formBuilder","getItems","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","get","APIUrl","subscribe","next","value","items","error","err","console","log","openEditModal","item","patchValue","openpostModal","reset","Posting","valid","post","$","modal","updating","put","deleteInfo","delete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: ['', [Validators.required, Validators.maxLength(15),\r\n                      Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.http.get<items[]>(this.APIUrl).subscribe({\r\n      next: (value) => {\r\n        this.items = value;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  openEditModal(item: items) {\r\n    this.infoForm.patchValue(item);\r\n  }\r\n\r\n  openpostModal() {\r\n    this.infoForm.reset();\r\n  }\r\n\r\n  Posting() {\r\n    if (this.infoForm.valid) {\r\n      // Only submit if form is valid\r\n      this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Posted: ${this.infoForm.value.ID}`);\r\n          this.getItems();\r\n          $('#newModal').modal('hide'); // Close the modal\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  updating() {\r\n    if (this.infoForm.valid) {\r\n      // Only submit if form is valid\r\n      this.http.put(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Updated by ID: ${this.infoForm.value.ID}`);\r\n          this.getItems();\r\n          $('#exampleModal').modal('hide'); // Close the modal\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log(\"error here!\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  deleteInfo(ID: number) {\r\n    this.http.delete(`${this.APIUrl}?ID=${ID}`).subscribe({\r\n      next: () => {\r\n        console.log(`Deleted by ID: ${ID}`);\r\n        this.getItems()\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}","<h1>ALL Accounts</h1>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>Full Name</th>\r\n      <th>Username</th>\r\n      <th>Password</th>\r\n    </tr>\r\n    <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\"   data-bs-target=\"#newModal\"\r\n      (click)=\"openpostModal()\">Include new Info</button>\r\n  </thead>\r\n  <tbody *ngFor=\"let item of items\">\r\n    <tr>\r\n      <td>\r\n        <input class=\"input-group-text\" type=\"text\" [value]=\"item.ID\" disabled />\r\n      </td>\r\n      <td>\r\n        <input class=\"input-group-text\" type=\"text\" [value]=\"item.FName\" disabled />\r\n      </td>\r\n      <td>\r\n        <input class=\"input-group-text\" [value]=\"item.Username\" disabled />\r\n      </td>\r\n      <td>\r\n        <input class=\"input-group-text\" type=\"text\" [value]=\"item.Password\" disabled />\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n          (click)=\"openEditModal(item)\">\r\n          Edit\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-danger\" (click)=\"deleteInfo(item.ID)\" type=\"button\">\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Modal update -->\r\n<div *ngFor=\"let item of items\">\r\n  <div id=\"exampleModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <form (ngSubmit)=\"updating()\">\r\n          <div class=\"modal-header\">\r\n            <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Editing Modal</h1>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div>\r\n              <span class=\"text-danger\">Full Name</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" [(ngModel)]=\"editedInfo.FName\"\r\n                name=\"FName\" />\r\n              <span class=\"text-danger\">Username</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" [(ngModel)]=\"editedInfo.Username\"\r\n                name=\"Username\" />\r\n              <span class=\"text-danger\">Password</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" [(ngModel)]=\"editedInfo.Password\"\r\n                name=\"Password\" />\r\n              <!-- Include a hidden input for ID -->\r\n              <input type=\"hidden\" [(ngModel)]=\"editedInfo.ID\" name=\"ID\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- new modal -->\r\n\r\n<div>\r\n  <form (ngSubmit)=\"Posting()\">\r\n    <div class=\"modal fade\" id=\"newModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">\r\n              Creating Modal\r\n            </h1>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div>\r\n              <span class=\"text-danger\">Full Name required!!!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" minlength=\"3\" maxlength=\"15\" [(ngModel)]=\"editedInfo.FName\"\r\n                name=\"FName\" />\r\n              <span class=\"text-danger\">Username required!!!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" minlength=\"3\" maxlength=\"15\" [(ngModel)]=\"editedInfo.Username\"\r\n                name=\"Username\" />\r\n              <span class=\"text-danger\">Password required!!!</span>\r\n              <input type=\"text\" class=\"input-group mb-3\" minlength=\"3\" maxlength=\"15\" [(ngModel)]=\"editedInfo.Password\"\r\n                name=\"Password\" />\r\n              <!-- Include a hidden input for ID -->\r\n              <input type=\"hidden\" [(ngModel)]=\"editedInfo.ID\" name=\"ID\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Create</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}