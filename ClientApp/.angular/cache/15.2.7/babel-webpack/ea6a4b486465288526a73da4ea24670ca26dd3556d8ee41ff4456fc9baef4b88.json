{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"angular-toastify\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../counter/auth.service\";\nimport * as i7 from \"@angular/common\";\nfunction HomeComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Temperature:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Weather:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Humidity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\")(16, \"strong\");\n    i0.ɵɵtext(17, \"Wind Speed:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weather in \", ctx_r0.weatherData.name, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.main.temp, \" \\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.weather[0].description, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.main.humidity, \"%\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.weatherData.wind.speed, \" m/s\");\n  }\n}\nexport class HomeComponent {\n  constructor(weatherService, http, formBuilder, toaster, route, router, authService) {\n    this.weatherService = weatherService;\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.toaster = toaster;\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.city = '';\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n  }\n  ngOnInit() {\n    this.http.get(`${this.APIUrl}/info`).subscribe({\n      next: value => {\n        console.log(value);\n        ;\n      },\n      error: err => {\n        console.log(err);\n        console.log('yyacvaaaa!');\n      }\n    });\n    this.infoForm = this.formBuilder.group({\n      id: [0],\n      fname: ['', [Validators.required, Validators.maxLength(15)]],\n      lname: ['', [Validators.required, Validators.maxLength(10)]],\n      password: [''\n      // [\n      //   Validators.required,\n      //   Validators.maxLength(15),\n      //   Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\n      // ],\n      ],\n\n      roleID: [0]\n    });\n    this.loginForm = this.formBuilder.group({\n      lname: ['', [Validators.required, Validators.maxLength(10)]],\n      password: [''\n      // [\n      //   Validators.required,\n      //   Validators.maxLength(15),\n      //   Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\n      // ],\n      ]\n    });\n  }\n\n  getWeather() {\n    if (this.city.trim()) {\n      this.weatherService.getWeatherByCity(this.city).subscribe(data => {\n        this.weatherData = data;\n        data.main.temp = data.main.temp - 273.15;\n        data.main.temp = Math.round(data.main.temp);\n        console.log(this.weatherData);\n      }, error => {\n        console.error('Error fetching weather data:', error);\n      });\n    }\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.WeatherService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.AuthService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1, shrink-to-fit=no\"], [\"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\", \"rel\", \"stylesheet\"], [3, \"ngSubmit\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Your University System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"link\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"body\")(8, \"div\")(9, \"h1\");\n      i0.ɵɵtext(10, \"Weather Checker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.getWeather();\n      });\n      i0.ɵɵelementStart(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Enter city name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Check Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, HomeComponent_div_17_Template, 19, 5, \"div\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i7.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","HomeComponent","constructor","weatherService","http","formBuilder","toaster","route","router","authService","ngOnInit","get","APIUrl","subscribe","next","value","console","log","error","err","infoForm","group","id","fname","required","maxLength","lname","password","roleID","loginForm","getWeather","city","trim","getWeatherByCity","data","weatherData","main","temp","Math","round","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\New folder\\Snatched\\ClientApp\\src\\app\\home\\home.component.ts","D:\\New folder\\Snatched\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../weather.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastService } from 'angular-toastify';\r\nimport { AuthService } from '../counter/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  city: string = '';\r\n  weatherData: any;\r\n  \r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  constructor(private weatherService: WeatherService,\r\n      private http: HttpClient,\r\n        private formBuilder: FormBuilder,\r\n        private toaster: ToastService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authService: AuthService\r\n  ) { }\r\n\r\n  public loginForm!: FormGroup;\r\n  public infoForm!: FormGroup;\r\n  \r\n   ngOnInit() {\r\n      this.http.get<items[]>(`${this.APIUrl}/info`)\r\n      .subscribe({\r\n        next: (value) => {\r\n          console.log(value);;\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log('yyacvaaaa!');\r\n        },\r\n      }\r\n      );\r\n      this.infoForm = this.formBuilder.group({\r\n        id: [0],\r\n        fname: ['', [Validators.required, Validators.maxLength(15)]],\r\n        lname: ['', [Validators.required, Validators.maxLength(10)]],\r\n        password: [\r\n          '',\r\n          // [\r\n          //   Validators.required,\r\n          //   Validators.maxLength(15),\r\n          //   Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\r\n          // ],\r\n        ],\r\n        roleID: [0],\r\n      });\r\n  \r\n      this.loginForm = this.formBuilder.group({\r\n        lname: ['', [Validators.required, Validators.maxLength(10)]],\r\n        password: [\r\n          '',\r\n          // [\r\n          //   Validators.required,\r\n          //   Validators.maxLength(15),\r\n          //   Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\r\n          // ],\r\n        ],\r\n      });\r\n    }\r\n\r\n\r\n  getWeather() {\r\n    if (this.city.trim()) {\r\n      this.weatherService.getWeatherByCity(this.city).subscribe(\r\n        data => {\r\n          this.weatherData = data;\r\n          data.main.temp = data.main.temp - 273.15;\r\n          data.main.temp = Math.round(data.main.temp)\r\n          console.log(this.weatherData);\r\n        },\r\n        error => {\r\n          console.error('Error fetching weather data:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\ninterface items {\r\n  ID: number;\r\n  fname: string;\r\n  lname: string;\r\n}","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <title>Your University System</title>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n</head>\r\n\r\n<body>\r\n    <div>\r\n        <h1>Weather Checker</h1>\r\n        <form (ngSubmit)=\"getWeather()\">\r\n          <label for=\"city\">Enter city name:</label>\r\n          <input type=\"text\" id=\"city\" [(ngModel)]=\"city\" name=\"city\" required>\r\n          <button type=\"submit\">Check Weather</button>\r\n        </form>\r\n\r\n        <div *ngIf=\"weatherData\">\r\n          <h2>Weather in {{ weatherData.name }}</h2>\r\n          <p><strong>Temperature:</strong> {{ weatherData.main.temp}} °C</p>\r\n          <p><strong>Weather:</strong> {{ weatherData.weather[0].description }}</p>\r\n          <p><strong>Humidity:</strong> {{ weatherData.main.humidity }}%</p>\r\n          <p><strong>Wind Speed:</strong> {{ weatherData.wind.speed }} m/s</p>\r\n        </div>\r\n      </div>\r\n\r\n    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js\"></script>\r\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n</body>\r\n\r\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}