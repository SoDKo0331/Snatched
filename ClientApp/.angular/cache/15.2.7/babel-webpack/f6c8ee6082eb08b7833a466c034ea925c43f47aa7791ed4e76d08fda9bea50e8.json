{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CounterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Full Name is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"label\", 17);\n    i0.ɵɵtext(2, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 18);\n    i0.ɵɵtemplate(4, CounterComponent_div_13_div_4_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r1.infoForm.get(\"Username\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r1.infoForm.get(\"Username\")) == null ? null : tmp_0_0.touched));\n  }\n}\nfunction CounterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Password is required and should meet the criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CounterComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.isRegistration = true;\n  }\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n    this.loginForm = this.formBuilder.group({\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\n      Password: ['', [Validators.required, Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]]\n    });\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.FName);\n  }\n  onSubmit() {\n    if (this.isRegistration) {\n      if (this.infoForm.valid) {\n        this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\n          next: () => {\n            console.log(`Posted: ${this.infoForm.value.Username}`);\n            this.ngOnInit(); // Close the modal\n          },\n\n          error: err => {\n            console.log(err);\n            console.log('error here!');\n          }\n        });\n      }\n    } else {\n      if (this.loginForm.valid) {\n        // Handle login form submission\n        console.log('Login form submitted:', this.loginForm.value);\n        // You can implement your login logic here\n      }\n    }\n  }\n\n  toggleForm() {\n    this.isRegistration = !this.isRegistration;\n    this.infoForm.reset();\n    this.loginForm.reset();\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 21,\n  vars: 5,\n  consts: [[1, \"bg-image\"], [1, \"d-flex\", \"justify-content-between\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"newModal\", \"tabindex\", \"-1\"], [1, \"bg-info\"], [1, \"mt-5\", \"pt-5\", \"d-flex\", \"bg-info-subtle\", \"position-relative\", \"d-flex\", \"justify-content-center\", \"bg-light\", \"border\", \"rounded-4\", \"border-1\", \"border-primary-subtle\", \"flex-column\", 2, \"width\", \"600px\", \"height\", \"400px\"], [1, \"d-flex\", \"justify-content-around\"], [1, \"m-3\", \"d-flex\", \"justify-content-center\"], [1, \"form-group\"], [\"for\", \"FName\"], [\"type\", \"text\", \"id\", \"FName\", \"formControlName\", \"FName\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"for\", \"Password\"], [\"type\", \"password\", \"id\", \"Password\", \"formControlName\", \"Password\", 1, \"form-control\"], [1, \"modal-footer\"], [\"src\", \"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-captured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-line-design-style-vector.jpg\", \"alt\", \"...\", 1, \"mt-5\", \"img-thumbnail\", \"border-0\", 2, \"width\", \"600px\", \"height\", \"440px\", \"--bs-img-opacity\", \".5\"], [1, \"text-danger\"], [\"for\", \"Username\"], [\"type\", \"text\", \"id\", \"Username\", \"formControlName\", \"Username\", 1, \"form-control\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CounterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 9);\n      i0.ɵɵtemplate(12, CounterComponent_div_12_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, CounterComponent_div_13_Template, 5, 1, \"div\", 11);\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵtemplate(18, CounterComponent_div_18_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"div\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(20, \"img\", 15);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.isRegistration ? ctx.infoForm : ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRegistration ? \"Registration\" : \"Login\", \" section \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.infoForm.get(\"FName\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.infoForm.get(\"FName\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistration);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.infoForm.get(\"Password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.infoForm.get(\"Password\")) == null ? null : tmp_4_0.touched));\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","CounterComponent","constructor","http","formBuilder","ngOnInit","infoForm","group","ID","FName","required","maxLength","Username","Password","pattern","loginForm","openpostModal","console","log","value","onSubmit","isRegistration","valid","post","APIUrl","subscribe","next","error","err","toggleForm","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\counter\\counter.component.ts","D:\\aka\\ClientApp\\src\\app\\counter\\counter.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent implements OnInit {\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {}\r\n\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n  public loginForm!: FormGroup;\r\n  public isRegistration: boolean = true;\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.required, Validators.maxLength(15)]],\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      Username: ['', [Validators.required, Validators.maxLength(10)]],\r\n      Password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.FName);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.isRegistration) {\r\n      if (this.infoForm.valid) {\r\n        this.http.post(`${this.APIUrl}`, this.infoForm.value).subscribe({\r\n          next: () => {\r\n            console.log(`Posted: ${this.infoForm.value.Username}`);\r\n            this.ngOnInit(); // Close the modal\r\n          },\r\n          error: (err) => {\r\n            console.log(err);\r\n            console.log('error here!');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      if (this.loginForm.valid) {\r\n        // Handle login form submission\r\n        console.log('Login form submitted:', this.loginForm.value);\r\n        // You can implement your login logic here\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleForm() {\r\n    this.isRegistration = !this.isRegistration;\r\n    this.infoForm.reset();\r\n    this.loginForm.reset();\r\n  }\r\n}\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n}\r\n","<div class=\"bg-image\">\r\n    <form class=\"d-flex justify-content-between\" [formGroup]=\"isRegistration ? infoForm : loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div id=\"newModal\" tabindex=\"-1\">\r\n            <div class=\"bg-info\">\r\n                <div style=\"width: 600px; height: 400px;\" class=\"mt-5 pt-5 d-flex bg-info-subtle position-relative d-flex justify-content-center bg-light border rounded-4 border-1 border-primary-subtle flex-column\">\r\n                    <div class=\"d-flex justify-content-around\">\r\n                        <h4 class=\"m-3 d-flex justify-content-center\">\r\n                            {{ isRegistration ? 'Registration' : 'Login' }} section\r\n                        </h4>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"FName\">Full Name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"FName\" formControlName=\"FName\">\r\n                            <div *ngIf=\"infoForm.get('FName')?.invalid && infoForm.get('FName')?.touched\" class=\"text-danger\">\r\n                                Full Name is required!\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"isRegistration\" class=\"form-group\">\r\n                            <label for=\"Username\">Username</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"Username\" formControlName=\"Username\">\r\n                            <div *ngIf=\"infoForm.get('Username')?.invalid && infoForm.get('Username')?.touched\" class=\"text-danger\">\r\n                                Username is required!\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Password\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"Password\" formControlName=\"Password\">\r\n                            <div *ngIf=\"infoForm.get('Password')?.invalid && infoForm.get('Password')?.touched\" class=\"text-danger\">\r\n                                Password is required and should meet the criteria.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <!-- ... Submit and toggle buttons ... -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <img src=\"https://static.vecteezy.com/system/resources/previews/009/205/381/non_2x/illustration-of-man-run-with-modern-laptop-captured-in-motion-hipster-surprised-bearded-web-developer-designer-or-programmer-with-laptop-modern-laptop-concept-continuous-line-design-style-vector.jpg\"\r\n            style=\"width: 600px; height: 440px; --bs-img-opacity: .5;\" class=\"mt-5 img-thumbnail border-0\"\r\n            alt=\"...\">\r\n    </form>\r\n</div>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}