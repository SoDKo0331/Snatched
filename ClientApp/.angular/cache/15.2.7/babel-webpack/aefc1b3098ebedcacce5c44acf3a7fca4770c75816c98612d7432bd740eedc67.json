{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FetchDataComponent = class FetchDataComponent {\n  constructor(http) {\n    this.http = http;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.editedShoe = {\n      SName: '',\n      SPrice: 0,\n      SDescription: ''\n    };\n    this.getItems();\n  }\n  getItems() {\n    this.http.get(this.APIUrl).subscribe({\n      next: value => {\n        this.items = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  openEditModal(event, item) {\n    this.editedShoe = {\n      ...item\n    }; // Clone the item to editedShoe\n  }\n\n  updating() {\n    this.http.put(`${this.APIUrl}?SName={this.item.SName}`, this.editedShoe).subscribe({\n      next: () => {\n        console.log(`Updated by Shoename: ${this.editedShoe.SName}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  deleteShoe(SName) {\n    this.http.delete(`${this.APIUrl}?SName=${SName}`).subscribe({\n      next: () => {\n        console.log(`Deleted by Shoename: ${SName}`);\n        this.getItems();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n};\nFetchDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n})], FetchDataComponent);\nexport { FetchDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAO1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFf,WAAM,GAAG,wCAAwC;IAMnD,UAAK,GAAY,EAAE;IAanB,eAAU,GAAU;MACzBC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,CAAC;MACTC,YAAY,EAAE;KACf;IApBC,IAAI,CAACC,QAAQ,EAAE;EACjB;EAIAA,QAAQ;IACN,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAU,IAAI,CAACC,MAAM,CAAC,CAACC,SAAS,CAAC;MAC5CC,IAAI,EAAGC,KAAK,IAAI;QACd,IAAI,CAACC,KAAK,GAAGD,KAAK;MACpB,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EASAG,aAAa,CAACC,KAAU,EAAEC,IAAS;IACjC,IAAI,CAACC,UAAU,GAAG;MAAE,GAAGD;IAAI,CAAE,CAAC,CAAC;EACjC;;EAEAE,QAAQ;IACN,IAAI,CAACnB,IAAI,CAACoB,GAAG,CAAC,GAAG,IAAI,CAACd,MAAM,0BAA0B,EAAE,IAAI,CAACY,UAAU,CAAC,CAACX,SAAS,CAAC;MACjFC,IAAI,EAAE,MAAK;QACTK,OAAO,CAACC,GAAG,CAAC,wBAAwB,IAAI,CAACI,UAAU,CAACjB,KAAK,EAAE,CAAC;QAC5D,IAAI,CAACG,QAAQ,EAAE;MACjB,CAAC;MACDO,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAGAS,UAAU,CAACpB,KAAa;IAEtB,IAAI,CAACD,IAAI,CAACsB,MAAM,CAAC,GAAG,IAAI,CAAChB,MAAM,UAAUL,KAAK,EAAE,CAAC,CAACM,SAAS,CAAC;MAC1DC,IAAI,EAAE,MAAK;QACTK,OAAO,CAACC,GAAG,CAAC,wBAAwBb,KAAK,EAAE,CAAC;QAC5C,IAAI,CAACG,QAAQ,EAAE;MACjB,CAAC;MACDO,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;CAED;AAzDYd,kBAAkB,eAJ9BD,SAAS,CAAC;EACT0B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,GACW1B,kBAAkB,CAyD9B;SAzDYA,kBAAkB","names":["Component","FetchDataComponent","constructor","http","SName","SPrice","SDescription","getItems","get","APIUrl","subscribe","next","value","items","error","err","console","log","openEditModal","event","item","editedShoe","updating","put","deleteShoe","delete","selector","templateUrl"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast'\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.getItems();\r\n  }\r\n\r\n  public items: items[] = [];\r\n\r\n  getItems() {\r\n    this.http.get<items[]>(this.APIUrl).subscribe({\r\n      next: (value) => {\r\n        this.items = value;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  public editedShoe: items = {\r\n    SName: '',\r\n    SPrice: 0,\r\n    SDescription: '',\r\n  };\r\n\r\n\r\n  openEditModal(event: any, item: any) {\r\n    this.editedShoe = { ...item }; // Clone the item to editedShoe\r\n  }\r\n\r\n  updating() {\r\n    this.http.put(`${this.APIUrl}?SName={this.item.SName}`, this.editedShoe).subscribe({\r\n      next: () => {\r\n        console.log(`Updated by Shoename: ${this.editedShoe.SName}`);\r\n        this.getItems()\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    })\r\n  }\r\n\r\n\r\n  deleteShoe(SName: string) {\r\n\r\n    this.http.delete(`${this.APIUrl}?SName=${SName}`).subscribe({\r\n      next: () => {\r\n        console.log(`Deleted by Shoename: ${SName}`);\r\n        this.getItems()\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface items {\r\n  SName: string;\r\n  SPrice: number;\r\n  SDescription: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}