{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction FetchDataComponent_table_5_tbody_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵelement(11, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_table_5_tbody_13_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.openEditModal(item_r6));\n    });\n    i0.ɵɵtext(14, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_table_5_tbody_13_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.deleteInfo(item_r6.ID));\n    });\n    i0.ɵɵtext(17, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", item_r6.ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r6.FName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r6.Username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r6.Password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r6.roleID);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 4)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Role ID\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, FetchDataComponent_table_5_tbody_13_Template, 18, 5, \"tbody\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items);\n  }\n}\nfunction FetchDataComponent_table_6_tbody_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵelement(11, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_table_6_tbody_13_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const item_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.openEditModal(item_r11));\n    });\n    i0.ɵɵtext(14, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_table_6_tbody_13_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const item_r11 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.deleteInfo(item_r11.ID));\n    });\n    i0.ɵɵtext(17, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", item_r11.ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r11.FName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r11.Username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r11.Password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", item_r11.roleID);\n  }\n}\nfunction FetchDataComponent_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 4)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Role ID\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, FetchDataComponent_table_6_tbody_13_Template, 18, 5, \"tbody\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.items);\n  }\n}\nfunction FetchDataComponent_div_7_div_1_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_7_div_1_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_7_div_1_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_7_div_1_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 12)(3, \"form\", 13);\n    i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_div_7_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.updating());\n    });\n    i0.ɵɵelementStart(4, \"div\", 14)(5, \"h4\", 15);\n    i0.ɵɵtext(6, \" Updating section \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8, \" Full Name \");\n    i0.ɵɵtemplate(9, FetchDataComponent_div_7_div_1_span_9_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(10, \"input\", 17);\n    i0.ɵɵtext(11, \" Username \");\n    i0.ɵɵtemplate(12, FetchDataComponent_div_7_div_1_span_12_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(13, \"input\", 18);\n    i0.ɵɵtext(14, \" Password \");\n    i0.ɵɵtemplate(15, FetchDataComponent_div_7_div_1_span_15_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(16, \"input\", 19);\n    i0.ɵɵtext(17, \" Role ID \");\n    i0.ɵɵtemplate(18, FetchDataComponent_div_7_div_1_span_18_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(19, \"input\", 20)(20, \"input\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 22)(22, \"button\", 23);\n    i0.ɵɵtext(23, \" Save changes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 24);\n    i0.ɵɵtext(25, \" Close \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r16.accForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r16.accForm.get(\"FName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r16.accForm.get(\"FName\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r16.accForm.get(\"Username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r16.accForm.get(\"Username\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r16.accForm.get(\"Password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r16.accForm.get(\"Password\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r16.accForm.get(\"roleID\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r16.accForm.get(\"roleID\")) == null ? null : tmp_4_0.touched));\n  }\n}\nfunction FetchDataComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FetchDataComponent_div_7_div_1_Template, 26, 5, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isData && ctx_r2.isAdmin);\n  }\n}\nfunction FetchDataComponent_div_8_div_1_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_8_div_1_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_8_div_1_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 12)(3, \"form\", 13);\n    i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_div_8_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.updating());\n    });\n    i0.ɵɵelementStart(4, \"div\", 14)(5, \"h4\", 15);\n    i0.ɵɵtext(6, \" Updating section \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8, \" Full Name \");\n    i0.ɵɵtemplate(9, FetchDataComponent_div_8_div_1_span_9_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(10, \"input\", 17);\n    i0.ɵɵtext(11, \" Username \");\n    i0.ɵɵtemplate(12, FetchDataComponent_div_8_div_1_span_12_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(13, \"input\", 18);\n    i0.ɵɵtext(14, \" Password \");\n    i0.ɵɵtemplate(15, FetchDataComponent_div_8_div_1_span_15_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelement(16, \"input\", 19)(17, \"input\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 22)(19, \"button\", 23);\n    i0.ɵɵtext(20, \" Save changes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 24);\n    i0.ɵɵtext(22, \" Close \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r24.accForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r24.accForm.get(\"FName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r24.accForm.get(\"FName\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r24.accForm.get(\"Username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r24.accForm.get(\"Username\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r24.accForm.get(\"Password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r24.accForm.get(\"Password\")) == null ? null : tmp_3_0.touched));\n  }\n}\nfunction FetchDataComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FetchDataComponent_div_8_div_1_Template, 23, 4, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isData && !ctx_r3.isAdmin);\n  }\n}\nfunction FetchDataComponent_h1_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"\\u0422\\u0430\\u043D\\u0434 \\u0445\\u0430\\u043D\\u0434\\u0430\\u0445 \\u044D\\u0440\\u0445 \\u0431\\u0430\\u0439\\u0445\\u0433\\u04AF\\u0439 \\u0431\\u0430\\u0439\\u043D\\u0430!\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/counter\"];\n};\nexport class FetchDataComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.APIUrl = 'https://localhost:7252/WeatherForecast';\n    this.items = [];\n    this.isData = false;\n    this.isAdmin = false;\n    this.getItems();\n  }\n  ngOnInit() {\n    this.accForm = this.formBuilder.group({\n      ID: [0],\n      FName: ['', [Validators.maxLength(15)]],\n      Username: ['', [Validators.maxLength(10)]],\n      Password: ['', [Validators.maxLength(15), Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$')]],\n      roleID: ['', [Validators.maxLength(1)]]\n    });\n  }\n  getItems() {\n    // Retrieve the token from local storage\n    const token = localStorage.getItem('token');\n    var roleIdString = localStorage.getItem('roleID') || '-1';\n    var roleId = parseInt(roleIdString);\n    var Idstring = localStorage.getItem('id') || '-1';\n    var ID = parseInt(Idstring);\n    console.log('   wtf  ' + token);\n    if (token) {\n      this.isData = true;\n      // Include the token in the HTTP headers for authorization\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n      console.log('Role ID:', roleId);\n      if (roleId != 1) {\n        this.isAdmin = false;\n        this.http.get(`${this.APIUrl}/user`, {\n          headers,\n          params: {\n            ID\n          }\n        }).subscribe({\n          next: value => {\n            this.items = value;\n          },\n          error: err => {\n            console.log(err);\n            console.log('yyacvaaaa!');\n          }\n        });\n      } else {\n        this.isAdmin = true;\n        this.http.get(`${this.APIUrl}`, {\n          headers\n        }).subscribe({\n          next: value => {\n            this.items = value;\n          },\n          error: err => {\n            console.log(err);\n            console.log('yyacvaaaa!');\n          }\n        });\n      }\n    } else this.isData = false;\n  }\n  openEditModal(item) {\n    this.accForm.patchValue(item);\n  }\n  openpostModal() {\n    console.log('karakum: ' + this.infoForm.value.FName);\n  }\n  updating() {\n    if (this.accForm.valid) {\n      this.http.put(`${this.APIUrl}`, this.accForm.value).subscribe({\n        next: () => {\n          console.log(`Updated by ID: ${this.accForm.value.ID}`);\n          this.getItems();\n          this.closeEditModal(); // Close the modal\n        },\n\n        error: err => {\n          console.log(err);\n          console.log('error here!');\n        }\n      });\n    }\n  }\n  closeEditModal() {\n    const modal = document.getElementById('exampleModal');\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      document.body.classList.remove('modal-open');\n      const modalBackdrop = document.querySelector('.modal-backdrop');\n      if (modalBackdrop) {\n        modalBackdrop.remove();\n      }\n    }\n  }\n  deleteInfo(ID) {\n    // Retrieve the token from local storage\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Include the token in the HTTP headers for authorization\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n      // Make an authenticated request to delete data\n      this.http.delete(`${this.APIUrl}?ID=${ID}`, {\n        headers\n      }).subscribe({\n        next: () => {\n          console.log(`Deleted by ID: ${ID}`);\n          this.getItems();\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 10,\n  vars: 7,\n  consts: [[\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#newModal\", 1, \"btn\", \"btn-primary\", \"m-3\", 3, \"routerLink\", \"click\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"table\", \"table-striped\"], [\"type\", \"text\", \"disabled\", \"\", 1, \"input-group-text\", 3, \"value\"], [\"disabled\", \"\", 1, \"input-group-text\", 3, \"value\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"id\", \"exampleModal\", \"class\", \"modal fade\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"modal-body\"], [1, \"my-3\", \"d-flex\", \"justify-content-center\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"FName\", 1, \"input-group\", \"mb-3\", \"bg-light\", \"border-1\", \"rounded\", \"shadow-sm\", \"bg-body-tertiary\"], [\"type\", \"text\", \"formControlName\", \"Username\", 1, \"input-group\", \"mb-3\", \"bg-light\", \"border-1\", \"rounded\", \"shadow-sm\", \"bg-body-tertiary\"], [\"type\", \"text\", \"formControlName\", \"Password\", 1, \"input-group\", \"mb-3\", \"bg-light\", \"border-1\", \"rounded\", \"shadow-sm\", \"bg-body-tertiary\"], [\"type\", \"text\", \"formControlName\", \"roleID\", 1, \"input-group\", \"mb-3\", \"bg-light\", \"border-1\", \"rounded\", \"shadow-sm\", \"bg-body-tertiary\"], [\"type\", \"hidden\", \"formControlName\", \"ID\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\", \"w-100\", \"p-1\", \"border-1\", \"rounded\", \"text-dark\", \"shadow\", \"bg-body-tertiary\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-transparent\", \"w-100\", \"p-1\", \"text-dark\"], [1, \"text-danger\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"ALL Accounts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_button_click_3_listener() {\n        return ctx.openpostModal();\n      });\n      i0.ɵɵtext(4, \" <-- Registeration/Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 14, 1, \"table\", 1);\n      i0.ɵɵtemplate(6, FetchDataComponent_table_6_Template, 14, 1, \"table\", 1);\n      i0.ɵɵtemplate(7, FetchDataComponent_div_7_Template, 2, 1, \"div\", 2);\n      i0.ɵɵtemplate(8, FetchDataComponent_div_8_Template, 2, 1, \"div\", 2);\n      i0.ɵɵtemplate(9, FetchDataComponent_h1_9_Template, 2, 0, \"h1\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isData && ctx.isAdmin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isData && !ctx.isAdmin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isData);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","Validators","i0","FetchDataComponent","constructor","http","formBuilder","getItems","ngOnInit","accForm","group","ID","FName","maxLength","Username","Password","pattern","roleID","token","localStorage","getItem","roleIdString","roleId","parseInt","Idstring","console","log","isData","headers","Authorization","isAdmin","get","APIUrl","params","subscribe","next","value","items","error","err","openEditModal","item","patchValue","openpostModal","infoForm","updating","valid","put","closeEditModal","modal","document","getElementById","classList","remove","style","display","body","modalBackdrop","querySelector","deleteInfo","delete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","D:\\aka\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html',\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  readonly APIUrl = 'https://localhost:7252/WeatherForecast';\r\n\r\n  public items: items[] = [];\r\n  public infoForm!: FormGroup;\r\n  public accForm!: FormGroup;\r\n  public isData: boolean = false;\r\n  public isAdmin: boolean = false;\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.accForm = this.formBuilder.group({\r\n      ID: [0],\r\n      FName: ['', [Validators.maxLength(15)]],\r\n      Username: ['', [Validators.maxLength(10)]],\r\n      Password: [\r\n        '',\r\n        [\r\n          Validators.maxLength(15),\r\n          Validators.pattern('^(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\r\n        ],\r\n      ],\r\n      roleID: ['', [Validators.maxLength(1)]],\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    // Retrieve the token from local storage\r\n    const token = localStorage.getItem('token');\r\n    var roleIdString = localStorage.getItem('roleID') || '-1';\r\n    var roleId = parseInt(roleIdString);\r\n    var Idstring = localStorage.getItem('id') || '-1';\r\n    var ID = parseInt(Idstring);\r\n    console.log('   wtf  ' + token);\r\n    if (token) {\r\n      this.isData = true;\r\n      // Include the token in the HTTP headers for authorization\r\n      const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\r\n\r\n      console.log('Role ID:', roleId);\r\n      if (roleId != 1) {\r\n        this.isAdmin = false;\r\n        this.http.get<items[]>(`${this.APIUrl}/user`, { headers, params: { ID } })\r\n          .subscribe({\r\n            next: (value) => {\r\n              this.items = value;\r\n            },\r\n            error: (err) => {\r\n              console.log(err);\r\n              console.log('yyacvaaaa!');\r\n            },\r\n          }\r\n          );\r\n      }\r\n      else {\r\n        this.isAdmin = true;\r\n        this.http.get<items[]>(`${this.APIUrl}`, { headers }).subscribe({\r\n          next: (value) => {\r\n            this.items = value;\r\n          },\r\n          error: (err) => {\r\n            console.log(err);\r\n            console.log('yyacvaaaa!');\r\n          },\r\n        });\r\n      }\r\n\r\n    } else this.isData = false;\r\n  }\r\n\r\n  openEditModal(item: items) {\r\n    this.accForm.patchValue(item);\r\n  }\r\n\r\n  openpostModal() {\r\n    console.log('karakum: ' + this.infoForm.value.FName);\r\n  }\r\n\r\n  updating() {\r\n    if (this.accForm.valid) {\r\n      this.http.put(`${this.APIUrl}`, this.accForm.value).subscribe({\r\n        next: () => {\r\n          console.log(`Updated by ID: ${this.accForm.value.ID}`);\r\n          this.getItems();\r\n          this.closeEditModal(); // Close the modal\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n          console.log('error here!');\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEditModal() {\r\n    const modal = document.getElementById('exampleModal');\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      document.body.classList.remove('modal-open');\r\n      const modalBackdrop = document.querySelector('.modal-backdrop');\r\n      if (modalBackdrop) {\r\n        modalBackdrop.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteInfo(ID: number) {\r\n    // Retrieve the token from local storage\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Include the token in the HTTP headers for authorization\r\n      const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\r\n\r\n      // Make an authenticated request to delete data\r\n      this.http.delete(`${this.APIUrl}?ID=${ID}`, { headers }).subscribe({\r\n        next: () => {\r\n          console.log(`Deleted by ID: ${ID}`);\r\n          this.getItems();\r\n        },\r\n        error: (err) => {\r\n          console.log(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\ninterface items {\r\n  ID: number;\r\n  FName: string;\r\n  Username: string;\r\n  Password: string;\r\n  roleID: number;\r\n}\r\n","<h1>ALL Accounts</h1>\r\n<div>\r\n  <button class=\"btn btn-primary m-3\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#newModal\"\r\n    (click)=\"openpostModal()\" [routerLink]=\"['/counter']\">\r\n    <-- Registeration/Login </button>\r\n      <table class=\"table table-striped\" *ngIf=\"isData && isAdmin\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Full Name</th>\r\n            <th>Username</th>\r\n            <th>Password</th>\r\n            <th>Role ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngFor=\"let item of items\">\r\n          <tr>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.ID\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.FName\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" [value]=\"item.Username\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.Password\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.roleID\" disabled />\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n                (click)=\"openEditModal(item)\">\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-danger\" (click)=\"deleteInfo(item.ID)\" type=\"button\">\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      \r\n      <table class=\"table table-striped\" *ngIf=\"isData && !isAdmin\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Full Name</th>\r\n            <th>Username</th>\r\n            <th>Password</th>\r\n            <th>Role ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngFor=\"let item of items\">\r\n          <tr>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.ID\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.FName\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" [value]=\"item.Username\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.Password\" disabled />\r\n            </td>\r\n            <td>\r\n              <input class=\"input-group-text\" type=\"text\" [value]=\"item.roleID\" disabled />\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n                (click)=\"openEditModal(item)\">\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-danger\" (click)=\"deleteInfo(item.ID)\" type=\"button\">\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- Modal update -->\r\n      <div *ngFor=\"let item of items\" >\r\n        <div *ngIf=\"isData && isAdmin\" id=\"exampleModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <form [formGroup]=\"accForm\" (ngSubmit)=\"updating()\">\r\n                <!-- ... Modal header ... -->\r\n                <div class=\"modal-body\">\r\n                  <h4 class=\"my-3 d-flex justify-content-center\">\r\n                    Updating section\r\n                  </h4>\r\n                  <div>\r\n                    Full Name\r\n                    <span class=\"text-danger\" *ngIf=\"\r\n                    accForm.get('FName')?.invalid &&\r\n                    accForm.get('FName')?.touched\r\n                  \">is required!</span>\r\n                    <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                      formControlName=\"FName\" />\r\n                    Username\r\n                    <span class=\"text-danger\" *ngIf=\"\r\n                    accForm.get('Username')?.invalid &&\r\n                    accForm.get('Username')?.touched\r\n                  \">is required!</span>\r\n                    <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                      formControlName=\"Username\" />\r\n                    Password\r\n                    <span class=\"text-danger\" *ngIf=\"\r\n                    accForm.get('Password')?.invalid &&\r\n                    accForm.get('Password')?.touched\r\n                  \">is required!</span>\r\n                    <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                      formControlName=\"Password\" />\r\n                      Role ID\r\n                      <span class=\"text-danger\" *ngIf=\"\r\n                      accForm.get('roleID')?.invalid &&\r\n                      accForm.get('roleID')?.touched\r\n                    \">is required!</span>\r\n                      <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                        formControlName=\"roleID\" />\r\n                    <input type=\"hidden\" formControlName=\"ID\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"submit\"\r\n                    class=\"btn btn-outline-success w-100 p-1 border-1 rounded text-dark shadow bg-body-tertiary\">\r\n                    Save changes\r\n                  </button>\r\n                  <button type=\"button\" class=\"btn btn-transparent w-100 p-1 text-dark\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let item of items\">\r\n        <div *ngIf=\"isData && !isAdmin\" id=\"exampleModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <form [formGroup]=\"accForm\" (ngSubmit)=\"updating()\">\r\n                <!-- ... Modal header ... -->\r\n                <div class=\"modal-body\">\r\n                  <h4 class=\"my-3 d-flex justify-content-center\">\r\n                    Updating section\r\n                  </h4>\r\n                  <div>\r\n                    Full Name\r\n                    <span class=\"text-danger\" *ngIf=\"\r\n                    accForm.get('FName')?.invalid &&\r\n                    accForm.get('FName')?.touched\r\n                  \">is required!</span>\r\n                    <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                      formControlName=\"FName\" />\r\n                    Username\r\n                    <span class=\"text-danger\" *ngIf=\"\r\n                    accForm.get('Username')?.invalid &&\r\n                    accForm.get('Username')?.touched\r\n                  \">is required!</span>\r\n                    <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                      formControlName=\"Username\" />\r\n                    Password\r\n                    <span class=\"text-danger\" *ngIf=\"\r\n                    accForm.get('Password')?.invalid &&\r\n                    accForm.get('Password')?.touched\r\n                  \">is required!</span>\r\n                    <input type=\"text\" class=\"input-group mb-3 bg-light border-1 rounded shadow-sm bg-body-tertiary\"\r\n                      formControlName=\"Password\" />\r\n                    <input type=\"hidden\" formControlName=\"ID\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"submit\"\r\n                    class=\"btn btn-outline-success w-100 p-1 border-1 rounded text-dark shadow bg-body-tertiary\">\r\n                    Save changes\r\n                  </button>\r\n                  <button type=\"button\" class=\"btn btn-transparent w-100 p-1 text-dark\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h1 *ngIf=\"!isData\">Танд хандах эрх байхгүй байна!</h1>\r\n      <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}